{"ast":null,"code":"import { put, takeEvery } from 'redux-saga/effects';\nimport * as actions from '../actions';\nexport function* ServiceData() {\n  console.log(\"submit------services\");\n  yield put(actions.ServiceData.request());\n\n  try {\n    console.log(\"SUCCESS-SAGA_DASHBOARD\");\n    let objArray = [{\n      id: 1,\n      serviceName: \"FrontOffice\",\n      subText: \"Requests, Wifi and More\"\n    }, {\n      id: 2,\n      serviceName: \"HouseKeeping\",\n      subText: \"Cleaning, Dusting and More\"\n    }, {\n      id: 3,\n      serviceName: \"All Day Dining\",\n      subText: \"Breakfast, Brunch, Lunch\"\n    }, {\n      id: 4,\n      serviceName: \"Bed, Bath & More\",\n      subText: \"Towel, Shampoo, Dental Kit..\"\n    }, {\n      id: 5,\n      serviceName: \"Other Services\",\n      subText: \"Towel, Shampoo, Dental Kit..\"\n    }]; // const response = [{ id: 1, serviceName: FrontOffice },]\n\n    yield put(actions.ServiceData.success(objArray));\n  } catch (_ref) {\n    let error = _ref.error;\n    yield put(actions.ServiceData.read.failure(error));\n  }\n}\nexport function* watchServiceData() {\n  yield takeEvery(actions.LOAD_SERVICE, ServiceData);\n}\nexport default watchServiceData;","map":{"version":3,"sources":["/media/mapper/Vani/helius-app/src/sagas/dashboardSagas.js"],"names":["put","takeEvery","actions","ServiceData","console","log","request","objArray","id","serviceName","subText","success","error","read","failure","watchServiceData","LOAD_SERVICE"],"mappings":"AACA,SAASA,GAAT,EAAcC,SAAd,QAA+B,oBAA/B;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AAEA,OAAO,UAAUC,WAAV,GAAwB;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,QAAML,GAAG,CAACE,OAAO,CAACC,WAAR,CAAoBG,OAApB,EAAD,CAAT;;AACA,MAAI;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,QAAIE,QAAQ,GAAG,CACX;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,WAAW,EAAE,aAAtB;AAAqCC,MAAAA,OAAO,EAAE;AAA9C,KADW,EAEX;AAAEF,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,WAAW,EAAE,cAAtB;AAAsCC,MAAAA,OAAO,EAAE;AAA/C,KAFW,EAGX;AAAEF,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,WAAW,EAAE,gBAAtB;AAAuCC,MAAAA,OAAO,EAAE;AAAhD,KAHW,EAIX;AAAEF,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,WAAW,EAAE,kBAAtB;AAA0CC,MAAAA,OAAO,EAAE;AAAnD,KAJW,EAKX;AAAEF,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,WAAW,EAAE,gBAAtB;AAAwCC,MAAAA,OAAO,EAAE;AAAjD,KALW,CAAf,CAFA,CASA;;AACA,UAAMV,GAAG,CAACE,OAAO,CAACC,WAAR,CAAoBQ,OAApB,CAA4BJ,QAA5B,CAAD,CAAT;AACH,GAXD,CAWE,aAAkB;AAAA,QAATK,KAAS,QAATA,KAAS;AAChB,UAAMZ,GAAG,CAACE,OAAO,CAACC,WAAR,CAAoBU,IAApB,CAAyBC,OAAzB,CAAiCF,KAAjC,CAAD,CAAT;AACH;AACJ;AAED,OAAO,UAAUG,gBAAV,GAA6B;AAChC,QAAMd,SAAS,CAACC,OAAO,CAACc,YAAT,EAAuBb,WAAvB,CAAf;AACH;AAED,eAAeY,gBAAf","sourcesContent":["\nimport { put, takeEvery } from 'redux-saga/effects';\nimport * as actions from '../actions';\n\nexport function* ServiceData() {\n    console.log(\"submit------services\");\n    yield put(actions.ServiceData.request());\n    try {\n        console.log(\"SUCCESS-SAGA_DASHBOARD\")\n        let objArray = [\n            { id: 1, serviceName: \"FrontOffice\", subText: \"Requests, Wifi and More\" },\n            { id: 2, serviceName: \"HouseKeeping\", subText: \"Cleaning, Dusting and More\" },\n            { id: 3, serviceName: \"All Day Dining\",subText: \"Breakfast, Brunch, Lunch\" },\n            { id: 4, serviceName: \"Bed, Bath & More\", subText: \"Towel, Shampoo, Dental Kit..\" },\n            { id: 5, serviceName: \"Other Services\", subText: \"Towel, Shampoo, Dental Kit..\" }\n        ]\n        // const response = [{ id: 1, serviceName: FrontOffice },]\n        yield put(actions.ServiceData.success(objArray));\n    } catch ({ error }) {\n        yield put(actions.ServiceData.read.failure(error));\n    }\n}\n\nexport function* watchServiceData() {\n    yield takeEvery(actions.LOAD_SERVICE, ServiceData);\n}\n\nexport default watchServiceData"]},"metadata":{},"sourceType":"module"}