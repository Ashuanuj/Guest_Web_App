{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport { routerReducer } from 'react-router-redux';\nimport { HARD_STATE_RESET } from '../actions';\nimport gformReducers from './guestUserForm';\nimport dashboardServicesReducers from './dashboardReducers';\nimport serviceCategoryReducers from './serviceCategoryReducers';\nimport frontOffice from './frontOfficeReducers';\nimport subCategory from './subCategoryReducers';\nimport subCategoryQty from './subCategoryQtyReducers';\nconst appReducer = combineReducers({\n  routing: routerReducer,\n  form: formReducer,\n  gformReducers,\n  dashboardServicesReducers,\n  serviceCategoryReducers,\n  frontOffice,\n  subCategory,\n  subCategoryQty\n});\nconst initialState = appReducer({}, {});\n\nconst rootReducer = (state, action) => {\n  if (action.type === HARD_STATE_RESET) {\n    state = initialState;\n  }\n\n  return appReducer(state, action);\n};\n\nexport default rootReducer; // export default rootReducer;","map":{"version":3,"sources":["/media/mapper/Vani/helius-app/src/reducers/index.js"],"names":["combineReducers","reducer","formReducer","routerReducer","HARD_STATE_RESET","gformReducers","dashboardServicesReducers","serviceCategoryReducers","frontOffice","subCategory","subCategoryQty","appReducer","routing","form","initialState","rootReducer","state","action","type"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,OAAO,IAAIC,WAApB,QAAuC,YAAvC;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,yBAAP,MAAsC,qBAAtC;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAGA,MAAMC,UAAU,GAAGX,eAAe,CAAC;AACjCY,EAAAA,OAAO,EAAET,aADwB;AAEjCU,EAAAA,IAAI,EAAEX,WAF2B;AAGjCG,EAAAA,aAHiC;AAIjCC,EAAAA,yBAJiC;AAKjCC,EAAAA,uBALiC;AAMjCC,EAAAA,WANiC;AAOjCC,EAAAA,WAPiC;AAQjCC,EAAAA;AARiC,CAAD,CAAlC;AAWA,MAAMI,YAAY,GAAGH,UAAU,CAAC,EAAD,EAAK,EAAL,CAA/B;;AAEA,MAAMI,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAIA,MAAM,CAACC,IAAP,KAAgBd,gBAApB,EACA;AACIY,IAAAA,KAAK,GAAGF,YAAR;AACH;;AACD,SAAOH,UAAU,CAACK,KAAD,EAAQC,MAAR,CAAjB;AACH,CAND;;AAQA,eAAeF,WAAf,C,CAEA","sourcesContent":["import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport { routerReducer } from 'react-router-redux';\nimport { HARD_STATE_RESET } from '../actions';\n\nimport gformReducers from './guestUserForm';\nimport dashboardServicesReducers from './dashboardReducers';\nimport serviceCategoryReducers from './serviceCategoryReducers';\nimport frontOffice from './frontOfficeReducers';\nimport subCategory from './subCategoryReducers';\nimport subCategoryQty from './subCategoryQtyReducers';\n\n\nconst appReducer = combineReducers({\n  routing: routerReducer,\n  form: formReducer,\n  gformReducers,\n  dashboardServicesReducers,\n  serviceCategoryReducers,\n  frontOffice,\n  subCategory,\n  subCategoryQty\n});\n\nconst initialState = appReducer({}, {});\n\nconst rootReducer = (state, action) => {\n    if (action.type === HARD_STATE_RESET)\n    {\n        state = initialState;\n    }\n    return appReducer(state, action);\n};\n\nexport default rootReducer;\n\n// export default rootReducer;"]},"metadata":{},"sourceType":"module"}