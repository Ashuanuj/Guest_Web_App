{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux'; // import { routerMiddleware } from 'react-router-redux';\n// import createSagaMiddleware from 'redux-saga';\n// import createLogger from 'redux-logger';\n\nimport rootReducer from './reducers'; // import rootSaga from './sagas';\n// import { formActionSaga } from 'redux-form-saga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst devtools = window.devToolsExtension || (() => noop => noop);\n\nexport default function configureStore(initialState = {}, history) {\n  const middlewares = [sagaMiddleware, routerMiddleware(history)].concat(_DEV_ ? createLogger() : []);\n  const enhancers = [applyMiddleware(...middlewares)].concat(_DEV_ ? devtools() : []);\n  const store = createStore(rootReducer, initialState, compose(...enhancers)); // Create hook for async sagas\n\n  store.runSaga = sagaMiddleware.run(rootSaga); // sagaMiddleware.run(formActionSaga);\n\n  if (_DEV_ && module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('./reducers', () => {\n      const nextRootReducer = require('./reducers').default;\n\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n}","map":{"version":3,"sources":["/media/mapper/Vani/helius-app/src/store.js"],"names":["createStore","applyMiddleware","compose","rootReducer","sagaMiddleware","createSagaMiddleware","devtools","window","devToolsExtension","noop","configureStore","initialState","history","middlewares","routerMiddleware","concat","_DEV_","createLogger","enhancers","store","runSaga","run","rootSaga","module","hot","accept","nextRootReducer","require","default","replaceReducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD,C,CACA;AACA;AACA;;AACA,OAAOC,WAAP,MAAwB,YAAxB,C,CACA;AACA;;AAEA,MAAMC,cAAc,GAAGC,oBAAoB,EAA3C;;AACA,MAAMC,QAAQ,GAAGC,MAAM,CAACC,iBAAP,KAA6B,MAAMC,IAAI,IAAIA,IAA3C,CAAjB;;AAEA,eAAe,SAASC,cAAT,CAAwBC,YAAY,GAAG,EAAvC,EAA2CC,OAA3C,EAAoD;AACjE,QAAMC,WAAW,GAAG,CAClBT,cADkB,EAElBU,gBAAgB,CAACF,OAAD,CAFE,EAGlBG,MAHkB,CAGXC,KAAK,GAAGC,YAAY,EAAf,GAAoB,EAHd,CAApB;AAKA,QAAMC,SAAS,GAAG,CAChBjB,eAAe,CAAC,GAAGY,WAAJ,CADC,EAEhBE,MAFgB,CAETC,KAAK,GAAGV,QAAQ,EAAX,GAAgB,EAFZ,CAAlB;AAIA,QAAMa,KAAK,GAAGnB,WAAW,CACvBG,WADuB,EAEvBQ,YAFuB,EAGvBT,OAAO,CAAC,GAAGgB,SAAJ,CAHgB,CAAzB,CAViE,CAgBjE;;AACAC,EAAAA,KAAK,CAACC,OAAN,GAAgBhB,cAAc,CAACiB,GAAf,CAAmBC,QAAnB,CAAhB,CAjBiE,CAkBjE;;AAEA,MAAIN,KAAK,IAAIO,MAAM,CAACC,GAApB,EAAyB;AACvB;AACAD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,YAAlB,EAAgC,MAAM;AACpC,YAAMC,eAAe,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,OAA9C;;AACAT,MAAAA,KAAK,CAACU,cAAN,CAAqBH,eAArB;AACD,KAHD;AAID;;AAED,SAAOP,KAAP;AACD","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\n// import { routerMiddleware } from 'react-router-redux';\n// import createSagaMiddleware from 'redux-saga';\n// import createLogger from 'redux-logger';\nimport rootReducer from './reducers';\n// import rootSaga from './sagas';\n// import { formActionSaga } from 'redux-form-saga';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst devtools = window.devToolsExtension || (() => noop => noop);\n\nexport default function configureStore(initialState = {}, history) {\n  const middlewares = [\n    sagaMiddleware,\n    routerMiddleware(history),\n  ].concat(_DEV_ ? createLogger() : []);\n\n  const enhancers = [\n    applyMiddleware(...middlewares),\n  ].concat(_DEV_ ? devtools() : []);\n\n  const store = createStore(\n    rootReducer,\n    initialState,\n    compose(...enhancers)\n  );\n\n  // Create hook for async sagas\n  store.runSaga = sagaMiddleware.run(rootSaga);\n  // sagaMiddleware.run(formActionSaga);\n\n  if (_DEV_ && module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('./reducers', () => {\n      const nextRootReducer = require('./reducers').default;\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n}"]},"metadata":{},"sourceType":"module"}