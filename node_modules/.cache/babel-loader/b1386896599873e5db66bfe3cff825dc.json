{"ast":null,"code":"var _jsxFileName = \"/media/mapper/Vani/helius-app/src/components/RequestForm.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Col, Button, Form } from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport TextInput from '../components/forms/TextInput';\nimport { Link } from 'react-router-dom';\nimport { DatePicker } from './forms/DatePickerInput';\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = 'Required';\n  } else if (!values.name.match(/^[a-zA-Z]*$/)) {\n    errors.name = 'Please enter alphabet characters only.';\n  } else if (values.name.length < 3) {\n    errors.name = 'Minimum be 3 characters or more';\n  }\n\n  if (!values.roomno) {\n    errors.roomno = 'Required';\n  }\n\n  if (!values.dob) {\n    errors.dob = 'Required';\n  }\n\n  return errors;\n};\n\nlet RequestForm = props => {\n  const handleSubmit = props.handleSubmit,\n        pristine = props.pristine,\n        submitting = props.submitting;\n  return React.createElement(Col, {\n    className: \"form-main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Field, {\n    component: TextInput,\n    name: \"name\",\n    label: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: TextInput,\n    name: \"roomno\",\n    label: \"Room No\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: DatePicker,\n    name: \"dob\",\n    label: \"Date of Birth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"lg\",\n    type: \"submit\",\n    disabled: pristine || submitting,\n    className: \"Requestbtn bg-gradient-Requestbtn btn-outline-info border-0\",\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"REQUEST ACCESS\"))));\n};\n\nRequestForm.propTypes = {\n  usernameInputProps: PropTypes.object,\n  roomnoInputProps: PropTypes.object,\n  dobInputProps: PropTypes.object\n};\nRequestForm = reduxForm({\n  form: 'request-form',\n  validate\n})(RequestForm);\nexport default RequestForm;","map":{"version":3,"sources":["/media/mapper/Vani/helius-app/src/components/RequestForm.js"],"names":["PropTypes","React","Col","Button","Form","Field","reduxForm","TextInput","Link","DatePicker","validate","values","errors","name","match","length","roomno","dob","RequestForm","props","handleSubmit","pristine","submitting","propTypes","usernameInputProps","object","roomnoInputProps","dobInputProps","form"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {Col, Button, Form} from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport TextInput  from '../components/forms/TextInput';\nimport {Link} from 'react-router-dom';\nimport {DatePicker} from './forms/DatePickerInput';\n\n\nconst validate = values => {\n  const errors = {}\n  if (!values.name) {\n    errors.name = 'Required'\n  } else if (!values.name.match(/^[a-zA-Z]*$/)) {\n    errors.name = 'Please enter alphabet characters only.'\n  } else if (values.name.length < 3) {\n    errors.name = 'Minimum be 3 characters or more'\n  }\n  if (!values.roomno) {\n    errors.roomno = 'Required'\n  }\n  if (!values.dob) {\n    errors.dob = 'Required'\n  }\n  return errors\n  }\n\nlet RequestForm = props => {\n    const { handleSubmit, pristine, submitting } = props\n    return(\n            <Col className=\"form-main\">\n              <Form onSubmit={handleSubmit} >\n                   \n                    <Field component={TextInput} name=\"name\" label=\"Name\" />\n                \n                    <Field component={TextInput} name=\"roomno\" label=\"Room No\" />\n              \n                    <Field component={DatePicker} name=\"dob\" label=\"Date of Birth\" />\n                  \n                  <Link to=\"/dashboard\">\n                    <Button\n                        size=\"lg\"\n                        type=\"submit\"\n                        disabled={pristine || submitting} \n                        className=\"Requestbtn bg-gradient-Requestbtn btn-outline-info border-0\"\n                        block \n                        >\n                            REQUEST ACCESS\n                    </Button>\n                   </Link>\n              </Form>\n            </Col>\n      \n    );\n  }\n\nRequestForm.propTypes = {\n    usernameInputProps: PropTypes.object,\n    roomnoInputProps: PropTypes.object,\n    dobInputProps: PropTypes.object\n}\n\nRequestForm = reduxForm({\n  form: 'request-form',\n  validate,\n})(RequestForm);\n\nexport default RequestForm;"]},"metadata":{},"sourceType":"module"}