{"ast":null,"code":"import { put, call, fork, take } from 'redux-saga/effects';\nimport * as actions from '../actions';\nimport { history } from '../helper/history';\nexport function* guestLogIn(data) {\n  yield put(actions.guestLogIn.request());\n\n  try {\n    if (!data === \"\") {\n      throw new Error({\n        error: {\n          customMessage: 'fields are mandatory.'\n        }\n      });\n    }\n\n    const response = yield call('http://localhost:3000/', data);\n    console.log(\"response---------->\", response);\n\n    if (response.user.length > 0) {\n      yield put(actions.initialize({\n        IS_LOGIN: true\n      }));\n      yield put(actions.guestLogIn.success(response));\n      yield call(history.push, '/dashboard');\n    } else {\n      yield put(actions.guestLogIn.failure({\n        customMessage: 'Access Denied.'\n      }));\n    }\n  } catch (_ref) {\n    let error = _ref.error;\n    yield put(actions.guestLogIn.failure(error));\n  }\n}\nexport function* watchLogIn() {\n  while (true) {\n    const _ref2 = yield take(actions.GUEST_LOG_IN),\n          payload = _ref2.payload;\n\n    yield call(guestLogIn, payload);\n  }\n}\nexport default [fork(watchLogIn)];","map":{"version":3,"sources":["/media/mapper/Vani/helius-app/src/sagas/guestForm.js"],"names":["put","call","fork","take","actions","history","guestLogIn","data","request","Error","error","customMessage","response","console","log","user","length","initialize","IS_LOGIN","success","push","failure","watchLogIn","GUEST_LOG_IN","payload"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAAyBC,IAAzB,QAAoC,oBAApC;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACA,SAAQC,OAAR,QAAsB,mBAAtB;AAEQ,OAAO,UAAWC,UAAX,CAAsBC,IAAtB,EAA4B;AACnC,QAAMP,GAAG,CAACI,OAAO,CAACE,UAAR,CAAmBE,OAAnB,EAAD,CAAT;;AACA,MAAI;AACI,QAAI,CAACD,IAAD,KAAU,EAAd,EAAkB;AAClB,YAAM,IAAIE,KAAJ,CAAU;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,aAAa,EAAE;AAAjB;AAAT,OAAV,CAAN;AACC;;AACD,UAAMC,QAAQ,GAAG,MAAMX,IAAI,CAAC,wBAAD,EAA2BM,IAA3B,CAA3B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCF,QAAlC;;AACA,QAAIA,QAAQ,CAACG,IAAT,CAAcC,MAAd,GAAuB,CAA3B,EAA6B;AACzB,YAAMhB,GAAG,CAACI,OAAO,CAACa,UAAR,CAAmB;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAnB,CAAD,CAAT;AACQ,YAAMlB,GAAG,CAACI,OAAO,CAACE,UAAR,CAAmBa,OAAnB,CAA2BP,QAA3B,CAAD,CAAT;AACA,YAAMX,IAAI,CAACI,OAAO,CAACe,IAAT,EAAe,YAAf,CAAV;AACX,KAJD,MAKI;AACA,YAAMpB,GAAG,CAACI,OAAO,CAACE,UAAR,CAAmBe,OAAnB,CAA2B;AAAEV,QAAAA,aAAa,EAAC;AAAhB,OAA3B,CAAD,CAAT;AACH;AAER,GAfD,CAgBA,aAAkB;AAAA,QAATD,KAAS,QAATA,KAAS;AAClB,UAAMV,GAAG,CAACI,OAAO,CAACE,UAAR,CAAmBe,OAAnB,CAA2BX,KAA3B,CAAD,CAAT;AACC;AACA;AAED,OAAO,UAAWY,UAAX,GAAwB;AAC3B,SAAO,IAAP,EAAa;AAAA,kBACO,MAAMnB,IAAI,CAACC,OAAO,CAACmB,YAAT,CADjB;AAAA,UACLC,OADK,SACLA,OADK;;AAEL,UAAMvB,IAAI,CAACK,UAAD,EAAakB,OAAb,CAAV;AACP;AACA;AAGb,eAAe,CACXtB,IAAI,CAACoB,UAAD,CADO,CAAf","sourcesContent":["import { put, call, fork,take} from 'redux-saga/effects';\nimport * as actions from '../actions';\nimport {history} from '../helper/history';\n\n        export function * guestLogIn(data) {\n        yield put(actions.guestLogIn.request());\n        try {\n                if (!data === \"\") {\n                throw new Error({ error: { customMessage: 'fields are mandatory.' } });\n                }\n                const response = yield call('http://localhost:3000/', data);\n                console.log(\"response---------->\",response);\n                if (response.user.length > 0){\n                    yield put(actions.initialize({ IS_LOGIN: true }));\n                            yield put(actions.guestLogIn.success(response));\n                            yield call(history.push, '/dashboard');\n                }\n                else{\n                    yield put(actions.guestLogIn.failure({ customMessage:'Access Denied.'}));\n                }\n                    \n        }\n        catch ({ error }) {\n        yield put(actions.guestLogIn.failure(error));\n        }\n        }\n\n        export function * watchLogIn() {\n            while (true) {\n            const { payload } = yield take(actions.GUEST_LOG_IN);\n                    yield call(guestLogIn, payload);\n            }\n            }\n            \n\nexport default [\n    fork(watchLogIn)\n];"]},"metadata":{},"sourceType":"module"}