{"ast":null,"code":"import _defineProperty from \"/media/mapper/Vani/helius-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/media/mapper/Vani/helius-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/media/mapper/Vani/helius-app/src/components/Layout/Header.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer'; // import Button from '@material-ui/core/Button';\n\nimport List from '@material-ui/core/List'; // import Divider from '@material-ui/core/Divider';\n\nimport ListItem from '@material-ui/core/ListItem'; // import ListItemIcon from '@material-ui/core/ListItemIcon';\n\nimport ListItemText from '@material-ui/core/ListItemText'; // import InboxIcon from '@material-ui/icons/MoveToInbox';\n// import MailIcon from '@material-ui/icons/Mail';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport componentImg from '../assets/img/bg/component.png';\nimport { MdClose } from 'react-icons/md';\nimport { Nav, Navbar, NavItem } from 'reactstrap'; // import bn from 'utils/bemnames';\n\nimport { FaShoppingCart } from 'react-icons/fa';\nimport { Link } from 'react-router-dom'; // const bem = bn.create('sidebar');\n// const bem = bn.create('header');\n// const MdNotificationsActiveWithBadge = withBadge({\n//   size: 'md',\n//   color: 'primary',\n//   style: {\n//     top: -10,\n//     right: -10,\n//     display: 'inline-flex',\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//   },\n//   children: <small>5</small>,\n// })(MdNotificationsActive);\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  }\n});\nexport default function Header() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState({\n    left: false\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState(_objectSpread({}, state, {\n      [side]: open\n    }));\n  };\n\n  const sideList = side => React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"sidebarImg-main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: componentImg,\n    className: \"sidebarImg\",\n    alt: \"cmp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"headername text-white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Welcome Mr Bansal\"), React.createElement(\"span\", {\n    className: \"crossbtn\",\n    onClick: toggleDrawer('left', false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \" \", React.createElement(MdClose, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    onClick: toggleDrawer(side, false),\n    onKeyDown: toggleDrawer(side, false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/services\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, ['Service'].map(text => React.createElement(ListItem, {\n    button: true,\n    key: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }))))), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/requestmain\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, ['My Request'].map(text => React.createElement(ListItem, {\n    button: true,\n    key: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }))))), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, ['Logout'].map(text => React.createElement(ListItem, {\n    button: true,\n    key: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })))))));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    expand: true,\n    className: \"bgNav\",\n    ref: node => {\n      this.node = node;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    navbar: true,\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(IconButton // color=\"inherit\"\n  , {\n    cursor: \"pointer\",\n    \"aria-label\": \"open drawer\",\n    onClick: toggleDrawer('left', true) // edge=\"start\"\n    // className={clsx(classes.menuButton, open && classes.hide)}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }))), React.createElement(Nav, {\n    className: \"Nav-Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Welcome Mr.Bansal\"), React.createElement(Nav, {\n    navbar: true,\n    className: \"nav-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(NavItem, {\n    className: \"d-inline-flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/checkout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \" \", React.createElement(FaShoppingCart, {\n    size: 25,\n    style: {\n      color: '#fff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }))), \"         \"))), React.createElement(Drawer, {\n    open: state.left,\n    onClose: toggleDrawer('left', false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, sideList('left')));\n} // class Header extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.handleClick = this.handleClick.bind(this);\n//     this.handleOutsideClick = this.handleOutsideClick.bind(this);\n//     this.state = {\n//       popupVisible: false,\n//       toggle: false\n//     };\n//   }\n//   handleClick() {\n//     if (!this.state.popupVisible) {\n//       // attach/remove event handler\n//       document.addEventListener('click', this.handleOutsideClick, false);\n//     } else {\n//       document.removeEventListener('click', this.handleOutsideClick, false);\n//     }\n//     this.setState(prevState => ({\n//       popupVisible: !prevState.popupVisible,\n//     }));\n//   }\n//   handleOutsideClick(e) {\n//     // ignore clicks on the component itself\n//     // if (this.node.contains(e.target)) {\n//     //   return;\n//     // }\n//     console.log(this.state.toggle, 'OOOOOOOOOOOPPPPPPPPPPPEEEEEEEE')\n//     this.setState({\n//       toggle: false\n//     }, console.log(this.state.toggle, 'IIIIIIIIIIIIIII'))\n//     this.handleClick();\n//   }\n//   // state = {\n//   // isOpenNotificationPopover: false,\n//   // isNotificationConfirmed: false,\n//   // isOpenUserCardPopover: false,\n//   // toggle: false\n//   // };\n//   // toggleNotificationPopover = () => {\n//   //   this.setState({\n//   //     isOpenNotificationPopover: !this.state.isOpenNotificationPopover,\n//   //   });\n//   //   if (!this.state.isNotificationConfirmed) {\n//   //     this.setState({ isNotificationConfirmed: true });\n//   //   }\n//   // };\n//   // toggleUserCardPopover = () => {\n//   //   this.setState({\n//   //     isOpenUserCardPopover: !this.state.isOpenUserCardPopover,\n//   //   });\n//   // };\n//   handleSidebarControlButton = event => {\n//     event.preventDefault();\n//     event.stopPropagation();\n//     document.querySelector('.cr-sidebar').classList.toggle('cr-sidebar--open');\n//     if (!this.state.toggle) {\n//       // attach/remove event handler\n//       document.addEventListener('click', this.handleOutsideClick, false);\n//     } else {\n//       document.removeEventListener('click', this.handleOutsideClick, false);\n//     }\n//     this.setState(prevState => ({\n//       toggle: true,\n//     }), () => console.log(this.state.toggle, 'QQQQQQ'));\n//     console.log(this.state.toggle, 'QQQQQQQWWWWWWWWWWWWEEEEEEERRRRRRRRR')\n//     //  this.setState({\n//     //    toggle: !this.state.toggle\n//     //  })\n//   };\n//   render() {\n//     // const { isNotificationConfirmed } = this.state;\n//     return (\n//       <Navbar expand navbar-inverse className={bem.b('bgNav')} ref={node => { this.node = node; }}>\n//         <Nav navbar navbar-fixed-top className=\"mr-2\">\n//           {!this.state.toggle ?\n//             <Button className=\"ToggleBtn btn-outline-info btn btn-info\" onClick={this.handleSidebarControlButton}>\n//               <MdClearAll size={25} />\n//             </Button> : <div></div>}\n//           {/* <Button className=\"ToggleBtn btn-outline-info btn btn-info\" onClick={this.handleSidebarControlButton}>\n//             <MdClose size={25} />\n//           </Button>} */}\n//         </Nav>\n//         <Nav className=\"Nav-Name\">\n//           Welcome Mr.Bansal\n//         </Nav>\n//         <Nav navbar className={bem.e('nav-right')}>\n//           <NavItem className=\"d-inline-flex\">\n//             {/* <NavLink id=\"Popover1\" className=\"position-relative\">\n//               {isNotificationConfirmed ? (\n//                 <MdNotificationsNone\n//                   size={25}\n//                   className=\"text-secondary can-click\"\n//                   onClick={this.toggleNotificationPopover}\n//                 />\n//               ) : (\n//                 <MdNotificationsActiveWithBadge\n//                   size={25}\n//                   className=\"text-secondary can-click animated swing infinite\"\n//                   onClick={this.toggleNotificationPopover}\n//                 />\n//               )}\n//             </NavLink> */}\n//             {/* <Popover\n//               placement=\"bottom\"\n//               isOpen={this.state.isOpenNotificationPopover}\n//               toggle={this.toggleNotificationPopover}\n//               target=\"Popover1\"\n//             >\n//               <PopoverBody>\n//                 <Notifications notificationsData={notificationsData} />\n//               </PopoverBody>\n//             </Popover> */}\n//             <Link to=\"/checkout\"><span> <FaShoppingCart size={25} style={{ color: '#fff' }} /></span></Link>\n//           </NavItem>\n//           {/* <NavItem>\n//             <NavLink id=\"Popover2\">\n//               <Avatar\n//                 onClick={this.toggleUserCardPopover}\n//                 className=\"can-click\"\n//               />\n//             </NavLink>\n//             <Popover\n//               placement=\"bottom-end\"\n//               isOpen={this.state.isOpenUserCardPopover}\n//               toggle={this.toggleUserCardPopover}\n//               target=\"Popover2\"\n//               className=\"p-0 border-0\"\n//               style={{ minWidth: 250 }}\n//             >\n//               <PopoverBody className=\"p-0 border-light\">\n//                 <UserCard\n//                   title=\"Test\"\n//                   subtitle=\"test@test.com\"\n//                   text=\"Last updated 3 mins ago\"\n//                   className=\"border-light\"\n//                 >\n//                   <ListGroup flush>\n//                     <ListGroupItem tag=\"button\" action className=\"border-light\">\n//                       <MdPersonPin /> Profile\n//                     </ListGroupItem>\n//                     <ListGroupItem tag=\"button\" action className=\"border-light\">\n//                       <MdSettingsApplications /> Settings\n//                     </ListGroupItem>\n//                     <ListGroupItem tag=\"button\" action className=\"border-light\">\n//                       <MdExitToApp /> Signout\n//                     </ListGroupItem>\n//                   </ListGroup>\n//                 </UserCard>\n//               </PopoverBody>\n//             </Popover>\n//           </NavItem> */}\n//         </Nav>\n//       </Navbar>\n//     );\n//   }\n// }\n// export default Header;","map":{"version":3,"sources":["/media/mapper/Vani/helius-app/src/components/Layout/Header.js"],"names":["React","makeStyles","Drawer","List","ListItem","ListItemText","MenuIcon","IconButton","componentImg","MdClose","Nav","Navbar","NavItem","FaShoppingCart","Link","useStyles","list","width","fullList","Header","classes","useState","left","state","setState","toggleDrawer","side","open","event","type","key","sideList","map","text","node","color"],"mappings":"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":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\n// import Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\n// import Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\n// import MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport componentImg from '../assets/img/bg/component.png'\n\nimport {MdClose} from 'react-icons/md';\nimport {\n  Nav,\n  Navbar,\n  NavItem\n} from 'reactstrap';\n// import bn from 'utils/bemnames';\nimport { FaShoppingCart} from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n// const bem = bn.create('sidebar');\n\n// const bem = bn.create('header');\n\n// const MdNotificationsActiveWithBadge = withBadge({\n//   size: 'md',\n//   color: 'primary',\n//   style: {\n//     top: -10,\n//     right: -10,\n//     display: 'inline-flex',\n//     justifyContent: 'center',\n//     alignItems: 'center',\n//   },\n//   children: <small>5</small>,\n// })(MdNotificationsActive);\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nexport default function Header() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n   \n    left: false,\n   \n  });\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [side]: open });\n  };\n\n  const sideList = side => (\n  <>\n   \n        <div className=\"sidebarImg-main\">\n          <img\n            src={componentImg}\n            className=\"sidebarImg\"\n            alt=\"cmp\"\n          />\n          <span className=\"headername text-white\">\n            Welcome Mr Bansal\n          </span>\n\n          <span className=\"crossbtn\" onClick={toggleDrawer('left', false)}> <MdClose/></span>\n    \n  </div>\n\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(side, false)}\n      onKeyDown={toggleDrawer(side, false)}\n    >\n      <List>\n        <Link to=\"/services\">\n        {['Service'].map((text) => (\n          <ListItem button key={text}>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n        </Link>\n\n        {/* <Link to=\"/services\">\n        {['Service'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n        </Link> */}\n\n      </List>\n      {/* <Divider /> */}\n      <List>\n      <Link to=\"/requestmain\">\n        {['My Request'].map((text) => (\n          <ListItem button key={text}>\n             <ListItemText primary={text} />\n          </ListItem>\n        ))}\n        </Link>\n      </List>\n      <List>\n      <Link to=\"/\">\n        {['Logout'].map((text) => (\n          <ListItem button key={text}>\n              <ListItemText primary={text} />\n          </ListItem>\n        ))}\n        </Link>\n      </List>\n    </div>\n    </>\n  );\n\n  return (\n    <div>\n      {/* <Button onClick={toggleDrawer('left', true)}></Button> */}\n     \n      <Navbar expand className=\"bgNav\" ref={node => { this.node = node; }}>\n        \n         <Nav navbar className=\"\">\n         <IconButton\n            // color=\"inherit\"\n            cursor= \"pointer\"\n            aria-label=\"open drawer\"\n            onClick={toggleDrawer('left', true)}\n            // edge=\"start\"\n            // className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n\n         </Nav>\n        <Nav className=\"Nav-Name\">\n          Welcome Mr.Bansal\n        </Nav>\n\n     \n      <Nav navbar className='nav-right'>\n        <NavItem className=\"d-inline-flex\">\n        <Link to=\"/checkout\"><span> <FaShoppingCart size={25} style={{ color: '#fff' }} /></span></Link>         </NavItem>\n      </Nav>\n    \n      </Navbar> \n     \n      <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\n        {sideList('left')}\n      </Drawer>\n    </div>\n  );\n}\n\n// class Header extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.handleClick = this.handleClick.bind(this);\n//     this.handleOutsideClick = this.handleOutsideClick.bind(this);\n\n//     this.state = {\n//       popupVisible: false,\n//       toggle: false\n//     };\n//   }\n\n//   handleClick() {\n//     if (!this.state.popupVisible) {\n//       // attach/remove event handler\n//       document.addEventListener('click', this.handleOutsideClick, false);\n//     } else {\n//       document.removeEventListener('click', this.handleOutsideClick, false);\n//     }\n\n//     this.setState(prevState => ({\n//       popupVisible: !prevState.popupVisible,\n//     }));\n//   }\n\n//   handleOutsideClick(e) {\n//     // ignore clicks on the component itself\n//     // if (this.node.contains(e.target)) {\n//     //   return;\n//     // }\n//     console.log(this.state.toggle, 'OOOOOOOOOOOPPPPPPPPPPPEEEEEEEE')\n//     this.setState({\n//       toggle: false\n//     }, console.log(this.state.toggle, 'IIIIIIIIIIIIIII'))\n\n//     this.handleClick();\n//   }\n//   // state = {\n//   // isOpenNotificationPopover: false,\n//   // isNotificationConfirmed: false,\n//   // isOpenUserCardPopover: false,\n//   // toggle: false\n//   // };\n\n//   // toggleNotificationPopover = () => {\n//   //   this.setState({\n//   //     isOpenNotificationPopover: !this.state.isOpenNotificationPopover,\n//   //   });\n\n//   //   if (!this.state.isNotificationConfirmed) {\n//   //     this.setState({ isNotificationConfirmed: true });\n//   //   }\n//   // };\n\n//   // toggleUserCardPopover = () => {\n//   //   this.setState({\n//   //     isOpenUserCardPopover: !this.state.isOpenUserCardPopover,\n//   //   });\n//   // };\n\n//   handleSidebarControlButton = event => {\n//     event.preventDefault();\n//     event.stopPropagation();\n//     document.querySelector('.cr-sidebar').classList.toggle('cr-sidebar--open');\n//     if (!this.state.toggle) {\n//       // attach/remove event handler\n//       document.addEventListener('click', this.handleOutsideClick, false);\n//     } else {\n//       document.removeEventListener('click', this.handleOutsideClick, false);\n//     }\n\n//     this.setState(prevState => ({\n//       toggle: true,\n//     }), () => console.log(this.state.toggle, 'QQQQQQ'));\n//     console.log(this.state.toggle, 'QQQQQQQWWWWWWWWWWWWEEEEEEERRRRRRRRR')\n//     //  this.setState({\n//     //    toggle: !this.state.toggle\n//     //  })\n//   };\n\n//   render() {\n//     // const { isNotificationConfirmed } = this.state;\n\n//     return (\n//       <Navbar expand navbar-inverse className={bem.b('bgNav')} ref={node => { this.node = node; }}>\n//         <Nav navbar navbar-fixed-top className=\"mr-2\">\n//           {!this.state.toggle ?\n//             <Button className=\"ToggleBtn btn-outline-info btn btn-info\" onClick={this.handleSidebarControlButton}>\n//               <MdClearAll size={25} />\n//             </Button> : <div></div>}\n//           {/* <Button className=\"ToggleBtn btn-outline-info btn btn-info\" onClick={this.handleSidebarControlButton}>\n//             <MdClose size={25} />\n//           </Button>} */}\n\n//         </Nav>\n//         <Nav className=\"Nav-Name\">\n//           Welcome Mr.Bansal\n//         </Nav>\n\n//         <Nav navbar className={bem.e('nav-right')}>\n//           <NavItem className=\"d-inline-flex\">\n//             {/* <NavLink id=\"Popover1\" className=\"position-relative\">\n//               {isNotificationConfirmed ? (\n//                 <MdNotificationsNone\n//                   size={25}\n//                   className=\"text-secondary can-click\"\n//                   onClick={this.toggleNotificationPopover}\n//                 />\n//               ) : (\n//                 <MdNotificationsActiveWithBadge\n//                   size={25}\n//                   className=\"text-secondary can-click animated swing infinite\"\n//                   onClick={this.toggleNotificationPopover}\n//                 />\n//               )}\n//             </NavLink> */}\n//             {/* <Popover\n//               placement=\"bottom\"\n//               isOpen={this.state.isOpenNotificationPopover}\n//               toggle={this.toggleNotificationPopover}\n//               target=\"Popover1\"\n//             >\n//               <PopoverBody>\n//                 <Notifications notificationsData={notificationsData} />\n//               </PopoverBody>\n//             </Popover> */}\n//             <Link to=\"/checkout\"><span> <FaShoppingCart size={25} style={{ color: '#fff' }} /></span></Link>\n//           </NavItem>\n\n//           {/* <NavItem>\n//             <NavLink id=\"Popover2\">\n//               <Avatar\n//                 onClick={this.toggleUserCardPopover}\n//                 className=\"can-click\"\n//               />\n//             </NavLink>\n//             <Popover\n//               placement=\"bottom-end\"\n//               isOpen={this.state.isOpenUserCardPopover}\n//               toggle={this.toggleUserCardPopover}\n//               target=\"Popover2\"\n//               className=\"p-0 border-0\"\n//               style={{ minWidth: 250 }}\n//             >\n//               <PopoverBody className=\"p-0 border-light\">\n//                 <UserCard\n//                   title=\"Test\"\n//                   subtitle=\"test@test.com\"\n//                   text=\"Last updated 3 mins ago\"\n//                   className=\"border-light\"\n//                 >\n//                   <ListGroup flush>\n//                     <ListGroupItem tag=\"button\" action className=\"border-light\">\n//                       <MdPersonPin /> Profile\n//                     </ListGroupItem>\n\n//                     <ListGroupItem tag=\"button\" action className=\"border-light\">\n//                       <MdSettingsApplications /> Settings\n//                     </ListGroupItem>\n                \n//                     <ListGroupItem tag=\"button\" action className=\"border-light\">\n//                       <MdExitToApp /> Signout\n//                     </ListGroupItem>\n//                   </ListGroup>\n//                 </UserCard>\n//               </PopoverBody>\n//             </Popover>\n//           </NavItem> */}\n//         </Nav>\n//       </Navbar>\n//     );\n//   }\n// }\n\n// export default Header;\n"]},"metadata":{},"sourceType":"module"}