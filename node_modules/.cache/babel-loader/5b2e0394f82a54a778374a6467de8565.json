{"ast":null,"code":"import { put, call, fork } from 'redux-saga/effects';\nimport * as actions from '../actions';\nexport function* guestLogIn(data) {\n  yield put(actions.guestLoginIn.request());\n\n  try {\n    if (!data === \"\") {\n      throw new Error({\n        error: {\n          customMessage: 'fields are mandatory.'\n        }\n      });\n    }\n\n    const response = yield call('http://localhost:3000/', data);\n    console.log(response);\n  } catch (_ref) {\n    let error = _ref.error;\n    yield put(actions.guestLogIn.failure(error));\n  }\n}\nexport function* watchLogIn() {\n  while (true) {\n    const _ref2 = yield take(actions.GUEST_LOG_IN),\n          payload = _ref2.payload;\n\n    yield call(guestLogIn, payload);\n  }\n}\nexport default [fork(watchLogIn)];","map":{"version":3,"sources":["/media/mapper/Vani/helius-app/src/sagas/guestForm.js"],"names":["put","call","fork","actions","guestLogIn","data","guestLoginIn","request","Error","error","customMessage","response","console","log","failure","watchLogIn","take","GUEST_LOG_IN","payload"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,QAA+B,oBAA/B;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AAEQ,OAAO,UAAWC,UAAX,CAAsBC,IAAtB,EAA4B;AACnC,QAAML,GAAG,CAACG,OAAO,CAACG,YAAR,CAAqBC,OAArB,EAAD,CAAT;;AACA,MAAI;AACI,QAAI,CAACF,IAAD,KAAU,EAAd,EAAkB;AAClB,YAAM,IAAIG,KAAJ,CAAU;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,aAAa,EAAE;AAAjB;AAAT,OAAV,CAAN;AACC;;AACD,UAAMC,QAAQ,GAAG,MAAMV,IAAI,CAAC,wBAAD,EAA2BI,IAA3B,CAA3B;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACP,GAND,CAOA,aAAkB;AAAA,QAATF,KAAS,QAATA,KAAS;AAClB,UAAMT,GAAG,CAACG,OAAO,CAACC,UAAR,CAAmBU,OAAnB,CAA2BL,KAA3B,CAAD,CAAT;AACC;AACA;AAED,OAAO,UAAWM,UAAX,GAAwB;AAC3B,SAAO,IAAP,EAAa;AAAA,kBACO,MAAMC,IAAI,CAACb,OAAO,CAACc,YAAT,CADjB;AAAA,UACLC,OADK,SACLA,OADK;;AAEL,UAAMjB,IAAI,CAACG,UAAD,EAAac,OAAb,CAAV;AACP;AACA;AAGb,eAAe,CACXhB,IAAI,CAACa,UAAD,CADO,CAAf","sourcesContent":["import { put, call, fork} from 'redux-saga/effects';\nimport * as actions from '../actions';\n\n        export function * guestLogIn(data) {\n        yield put(actions.guestLoginIn.request());\n        try {\n                if (!data === \"\") {\n                throw new Error({ error: { customMessage: 'fields are mandatory.' } });\n                }\n                const response = yield call('http://localhost:3000/', data);\n                console.log(response);\n        }\n        catch ({ error }) {\n        yield put(actions.guestLogIn.failure(error));\n        }\n        }\n\n        export function * watchLogIn() {\n            while (true) {\n            const { payload } = yield take(actions.GUEST_LOG_IN);\n                    yield call(guestLogIn, payload);\n            }\n            }\n            \n\nexport default [\n    fork(watchLogIn)\n];"]},"metadata":{},"sourceType":"module"}