{"ast":null,"code":"import { put, call, take } from 'redux-saga/effects';\nimport * as actions from '../actions';\nimport history from '../helper/history';\nexport function* ServiceData(data) {\n  console.log(\"submit------services\");\n  yield put(actions.ServiceData.request(data));\n\n  try {\n    console.log(\"SUCCESS-SAGA_DASHBOARD\"); // const response = yield call(api.ServiceData);\n    // yield put(actions.ServiceData.read.success(response));\n  } catch (_ref) {// yield put(actions.ServiceData.read.failure(error));\n\n    let error = _ref.error;\n  }\n}\nexport function* watchServiceData() {\n  while (true) {\n    const _ref2 = yield take(actions.GUEST_LOG_IN),\n          payload = _ref2.payload;\n\n    console.log(payload, 'SERVICE SAGA PAYLOAD');\n    yield call(ServiceData, payload);\n  }\n}\nexport default watchServiceData;","map":{"version":3,"sources":["/media/mapper/Vani/helius-app/src/sagas/dashboardSagas.js"],"names":["put","call","take","actions","history","ServiceData","data","console","log","request","error","watchServiceData","GUEST_LOG_IN","payload"],"mappings":"AACA,SAASA,GAAT,EAAcC,IAAd,EAAmBC,IAAnB,QAA+B,oBAA/B;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACC,OAAOC,OAAP,MAAoB,mBAApB;AAED,OAAO,UAAUC,WAAV,CAAsBC,IAAtB,EAA4B;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,QAAMR,GAAG,CAACG,OAAO,CAACE,WAAR,CAAoBI,OAApB,CAA4BH,IAA5B,CAAD,CAAT;;AACA,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EADA,CAEA;AACA;AACD,GAJH,CAII,aAAkB,CAClB;;AADkB,QAATE,KAAS,QAATA,KAAS;AAEnB;AACF;AAED,OAAO,UAAUC,gBAAV,GAA6B;AACpC,SAAO,IAAP,EAAa;AAAA,kBACO,MAAMT,IAAI,CAACC,OAAO,CAACS,YAAT,CADjB;AAAA,UACLC,OADK,SACLA,OADK;;AAEbN,IAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ,EAAqB,sBAArB;AACA,UAAMZ,IAAI,CAACI,WAAD,EAAcQ,OAAd,CAAV;AACC;AACA;AAED,eAAeF,gBAAf","sourcesContent":["\nimport { put, call,take } from 'redux-saga/effects';\nimport * as actions from '../actions';\n import history from '../helper/history';\n\nexport function* ServiceData(data) {\nconsole.log(\"submit------services\");\nyield put(actions.ServiceData.request(data));\ntry {\n    console.log(\"SUCCESS-SAGA_DASHBOARD\")\n    // const response = yield call(api.ServiceData);\n    // yield put(actions.ServiceData.read.success(response));\n  } catch ({ error }) {\n    // yield put(actions.ServiceData.read.failure(error));\n  }\n}\n\nexport function* watchServiceData() {\nwhile (true) {\nconst { payload } = yield take(actions.GUEST_LOG_IN);\nconsole.log(payload, 'SERVICE SAGA PAYLOAD')\nyield call(ServiceData, payload);\n}\n}\n\nexport default watchServiceData"]},"metadata":{},"sourceType":"module"}