{"ast":null,"code":"var _jsxFileName = \"/media/mapper/Vani/helius-app/src/App.js\";\nimport { STATE_LOGIN, STATE_SIGNUP } from 'components/AuthForm';\nimport { EmptyLayout, LayoutRoute, MainLayout } from 'components/Layout';\nimport PageSpinner from 'components/PageSpinner';\nimport AuthPage from 'pages/AuthPage';\nimport RequestFormPage from './pages/RequestFormPage';\nimport React from 'react';\nimport componentQueries from 'react-component-queries';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport './styles/myStyles.scss';\nimport { CSSTransition } from 'react-transition-group';\nimport DashboardPage from './pages/DashboardPage';\nimport ServicesPage from './pages/ServicesPage';\nimport MainSubcategoryPage from './pages/SubcategoryPages/MainSubcategoryPage';\nimport CheckoutPage from './pages/CheckoutPage';\nimport WakeUp from './pages/WakeUp';\nimport FrontOffice from './pages/FrontOffice';\nimport RequestMain from './pages/RequestPages/RequestMain'; // const DashboardPage = React.lazy(() => import('pages/DashboardPage'));\n// const ServicesPage = React.lazy(() => import('pages/ServicesPage'));\n// const MainSubcategoryPage = React.lazy(() => import('pages/SubcategoryPages/MainSubcategoryPage'));\n// const CheckoutPage = React.lazy(() => import('pages/CheckoutPage'));\n// const WakeUp = React.lazy(() => import('pages/WakeUp'));\n// const FrontOffice = React.lazy(() => import('pages/FrontOffice'));\n// const RequestMain =  React.lazy(() => import('pages/RequestPages/RequestMain'));\n\nconst getBasename = () => {\n  return \"/\".concat(process.env.PUBLIC_URL.split('/').pop());\n};\n\nconst routes = [{\n  path: \"/dashboard\",\n  Component: DashboardPage\n}, {\n  path: \"/services\",\n  Component: ServicesPage\n}, {\n  path: \"/subcategorypages/mainsubcategorypage\",\n  Component: MainSubcategoryPage\n}, {\n  path: \"/checkout\",\n  Component: CheckoutPage\n}, {\n  path: \"/wakeup\",\n  Component: WakeUp\n}, {\n  path: \"/frontoffice\",\n  Component: FrontOffice\n}, {\n  path: \"/requestmain\",\n  Component: RequestMain\n}];\n\nclass App extends React.Component {\n  render() {\n    return React.createElement(BrowserRouter, {\n      basename: getBasename(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: RequestFormPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(LayoutRoute, {\n      exact: true,\n      path: \"/login\",\n      layout: EmptyLayout,\n      component: props => React.createElement(AuthPage, Object.assign({}, props, {\n        authState: STATE_LOGIN,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(LayoutRoute, {\n      exact: true,\n      path: \"/signup\",\n      layout: EmptyLayout,\n      component: props => React.createElement(AuthPage, Object.assign({}, props, {\n        authState: STATE_SIGNUP,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(MainLayout, {\n      breakpoint: this.props.breakpoint,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(React.Suspense, {\n      fallback: React.createElement(PageSpinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, routes.map(({\n      path,\n      Component\n    }) => React.createElement(Route, {\n      key: path,\n      exact: true,\n      path: path,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, ({\n      match\n    }) => React.createElement(CSSTransition, {\n      in: match != null,\n      timeout: 10,\n      classNames: \"page\",\n      unmountOnExit: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Component, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))))))), React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst query = ({\n  width\n}) => {\n  if (width < 575) {\n    return {\n      breakpoint: 'xs'\n    };\n  }\n\n  if (576 < width && width < 767) {\n    return {\n      breakpoint: 'sm'\n    };\n  }\n\n  if (768 < width && width > 1024) {\n    return {\n      breakpoint: 'md'\n    };\n  }\n\n  if (1025 < width && width > 1399) {\n    return {\n      breakpoint: 'lg'\n    };\n  }\n\n  if (width > 1400) {\n    return {\n      breakpoint: 'xl'\n    };\n  } // old one\n  // if (width < 575) {\n  //   return { breakpoint: 'xs' };\n  // }\n  // if (576 < width && width < 767) {\n  //   return { breakpoint: 'sm' };\n  // }\n  // if (768 < width && width < 991) {\n  //   return { breakpoint: 'md' };\n  // }\n  // if (992 < width && width < 1199) {\n  //   return { breakpoint: 'lg' };\n  // }\n  // if (width > 1200) {\n  //   return { breakpoint: 'xl' };\n  // }\n\n\n  return {\n    breakpoint: 'xs'\n  };\n};\n\nexport default componentQueries(query)(App);","map":{"version":3,"sources":["/media/mapper/Vani/helius-app/src/App.js"],"names":["STATE_LOGIN","STATE_SIGNUP","EmptyLayout","LayoutRoute","MainLayout","PageSpinner","AuthPage","RequestFormPage","React","componentQueries","BrowserRouter","Redirect","Route","Switch","CSSTransition","DashboardPage","ServicesPage","MainSubcategoryPage","CheckoutPage","WakeUp","FrontOffice","RequestMain","getBasename","process","env","PUBLIC_URL","split","pop","routes","path","Component","App","render","props","breakpoint","map","match","query","width"],"mappings":"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","sourcesContent":["import { STATE_LOGIN, STATE_SIGNUP } from 'components/AuthForm';\n\nimport { EmptyLayout, LayoutRoute, MainLayout } from 'components/Layout';\nimport PageSpinner from 'components/PageSpinner';\nimport AuthPage from 'pages/AuthPage';\nimport RequestFormPage from './pages/RequestFormPage'\nimport React from 'react';\nimport componentQueries from 'react-component-queries';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport './styles/myStyles.scss';\nimport { CSSTransition } from 'react-transition-group'\n\nimport DashboardPage from './pages/DashboardPage';\nimport ServicesPage from './pages/ServicesPage';\nimport MainSubcategoryPage from './pages/SubcategoryPages/MainSubcategoryPage';\nimport CheckoutPage from './pages/CheckoutPage';\nimport WakeUp from './pages/WakeUp';\nimport FrontOffice from './pages/FrontOffice';\nimport RequestMain from './pages/RequestPages/RequestMain';\n\n// const DashboardPage = React.lazy(() => import('pages/DashboardPage'));\n// const ServicesPage = React.lazy(() => import('pages/ServicesPage'));\n// const MainSubcategoryPage = React.lazy(() => import('pages/SubcategoryPages/MainSubcategoryPage'));\n// const CheckoutPage = React.lazy(() => import('pages/CheckoutPage'));\n// const WakeUp = React.lazy(() => import('pages/WakeUp'));\n// const FrontOffice = React.lazy(() => import('pages/FrontOffice'));\n// const RequestMain =  React.lazy(() => import('pages/RequestPages/RequestMain'));\n\nconst getBasename = () => {\n  return `/${process.env.PUBLIC_URL.split('/').pop()}`;\n};\n\n\nconst routes = [\n  { path:\"/dashboard\", Component:DashboardPage },\n  { path:\"/services\", Component:ServicesPage },\n  { path:\"/subcategorypages/mainsubcategorypage\" ,Component:MainSubcategoryPage },\n  { path:\"/checkout\",Component:CheckoutPage },\n  { path:\"/wakeup\" ,Component:WakeUp},\n  { path:\"/frontoffice\",Component:FrontOffice},\n  { path:\"/requestmain\" ,Component:RequestMain},\n]\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter basename={getBasename()}>\n     \n          <Switch>\n            <Route exact path=\"/\" component={RequestFormPage} />\n            <LayoutRoute\n              exact\n              path=\"/login\"\n              layout={EmptyLayout}\n              component={props => (\n                <AuthPage {...props} authState={STATE_LOGIN} />\n              )}\n            />\n            <LayoutRoute\n              exact\n              path=\"/signup\"\n              layout={EmptyLayout}\n              component={props => (\n                <AuthPage {...props} authState={STATE_SIGNUP} />\n              )}\n            />\n\n            <MainLayout breakpoint={this.props.breakpoint}>\n               <React.Suspense fallback={<PageSpinner />}>\n              {routes.map(({ path, Component }) => (\n                  <Route key={path} exact path={path}>\n                    {({ match }) => (\n                      <CSSTransition\n                        in={match != null}\n                        timeout={10}\n                        classNames=\"page\"\n                        unmountOnExit\n                      >\n                        <div className=\"page\">\n                          <Component />\n                        </div>\n                      </CSSTransition>\n                    )}\n                  </Route>\n                ))}\n                {/* <Route exact path=\"/dashboard\" component={DashboardPage} />\n                <Route exact path=\"/services\" component={ServicesPage} />\n                <Route exact path=\"/subcategorypages/mainsubcategorypage\" component={MainSubcategoryPage} />\n                <Route exact path=\"/checkout\" component={CheckoutPage} />\n                <Route exact path=\"/wakeup\" component={WakeUp} />\n                <Route exact path=\"/frontoffice\" component={FrontOffice} />\n                <Route exact path=\"/requestmain\" component={RequestMain} /> */}\n              </React.Suspense>\n            </MainLayout>\n            <Redirect to=\"/\" />\n          </Switch>\n       \n      </BrowserRouter>\n    );\n  }\n}\n\nconst query = ({ width }) => {\n  if (width < 575) {\n    return { breakpoint: 'xs' };\n  }\n\n  if (576 < width && width < 767) {\n    return { breakpoint: 'sm' };\n  }\n\n  if (768 < width && width > 1024) {\n      return { breakpoint: 'md' };\n  }\n\n  if (1025 < width && width > 1399) {\n    return { breakpoint: 'lg' };\n  }\n\n  if (width > 1400) {\n    return { breakpoint: 'xl' };\n  }\n\n  // old one\n  // if (width < 575) {\n  //   return { breakpoint: 'xs' };\n  // }\n\n  // if (576 < width && width < 767) {\n  //   return { breakpoint: 'sm' };\n  // }\n\n  // if (768 < width && width < 991) {\n  //   return { breakpoint: 'md' };\n  // }\n\n  // if (992 < width && width < 1199) {\n  //   return { breakpoint: 'lg' };\n  // }\n\n  // if (width > 1200) {\n  //   return { breakpoint: 'xl' };\n  // }\n\n  return { breakpoint: 'xs' };\n};\n\nexport default componentQueries(query)(App);"]},"metadata":{},"sourceType":"module"}