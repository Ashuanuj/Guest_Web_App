{"ast":null,"code":"import { put, call, take } from 'redux-saga/effects';\nimport * as actions from '../actions';\nimport history from '../helper/history';\nexport function* LogIn(data) {\n  console.log(\"submit------form\");\n  yield put(actions.LogIn.request(data));\n\n  try {\n    console.log(data, '<=============saga data');\n\n    if (!data.name || !data.roomno || !data.dob) {\n      throw new Error({\n        error: {\n          customMessage: 'fields are mandatory.'\n        }\n      });\n    }\n\n    const response = yield call('http://localhost:3000/', data);\n    console.log(\"response---------->\", response);\n\n    if (response.user.length > 0) {\n      yield put(actions.initialize({\n        IS_LOGIN: true\n      }));\n      yield put(actions.LogIn.success(response));\n      yield call(history.push, '/dashboard');\n    } else {\n      var data1 = {\n        customMessage: 'Access Denied.'\n      };\n      yield put(actions.LogIn.failure(data1));\n    }\n  } catch (_ref) {\n    let error = _ref.error;\n    console.log(error);\n    yield put(actions.LogIn.failure(error));\n  }\n}\nexport function* watchLogIn() {\n  while (true) {\n    const _ref2 = yield take(actions.GUEST_LOG_IN),\n          payload = _ref2.payload;\n\n    console.log(payload, 'ooooooooooooopppppppppppppppppppppppppppp');\n    yield call(LogIn, payload);\n  }\n}\nexport default watchLogIn;","map":{"version":3,"sources":["/media/mapper/Vani/helius-app/src/sagas/guestForm.js"],"names":["put","call","take","actions","history","LogIn","data","console","log","request","name","roomno","dob","Error","error","customMessage","response","user","length","initialize","IS_LOGIN","success","push","data1","failure","watchLogIn","GUEST_LOG_IN","payload"],"mappings":"AACA,SAASA,GAAT,EAAcC,IAAd,EAAmBC,IAAnB,QAA+B,oBAA/B;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACC,OAAOC,OAAP,MAAoB,mBAApB;AAED,OAAO,UAAUC,KAAV,CAAgBC,IAAhB,EAAsB;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,QAAMR,GAAG,CAACG,OAAO,CAACE,KAAR,CAAcI,OAAd,CAAsBH,IAAtB,CAAD,CAAT;;AACA,MAAI;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,yBAAlB;;AACA,QAAI,CAACA,IAAI,CAACI,IAAN,IAAc,CAACJ,IAAI,CAACK,MAApB,IAA8B,CAACL,IAAI,CAACM,GAAxC,EAA6C;AACzC,YAAM,IAAIC,KAAJ,CAAU;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,aAAa,EAAE;AAAjB;AAAT,OAAV,CAAN;AACC;;AACD,UAAMC,QAAQ,GAAG,MAAMf,IAAI,CAAC,wBAAD,EAA2BK,IAA3B,CAA3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCQ,QAAlC;;AACA,QAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAd,GAAuB,CAA3B,EAA6B;AACzB,YAAMlB,GAAG,CAACG,OAAO,CAACgB,UAAR,CAAmB;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAnB,CAAD,CAAT;AACQ,YAAMpB,GAAG,CAACG,OAAO,CAACE,KAAR,CAAcgB,OAAd,CAAsBL,QAAtB,CAAD,CAAT;AACA,YAAMf,IAAI,CAACG,OAAO,CAACkB,IAAT,EAAe,YAAf,CAAV;AACX,KAJD,MAKI;AACA,UAAIC,KAAK,GAAC;AAAER,QAAAA,aAAa,EAAC;AAAhB,OAAV;AACA,YAAMf,GAAG,CAACG,OAAO,CAACE,KAAR,CAAcmB,OAAd,CAAsBD,KAAtB,CAAD,CAAT;AACH;AACJ,GAhBD,CAiBA,aAAkB;AAAA,QAATT,KAAS,QAATA,KAAS;AAClBP,IAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACA,UAAMd,GAAG,CAACG,OAAO,CAACE,KAAR,CAAcmB,OAAd,CAAsBV,KAAtB,CAAD,CAAT;AACC;AACA;AAED,OAAO,UAAUW,UAAV,GAAuB;AAC9B,SAAO,IAAP,EAAa;AAAA,kBACO,MAAMvB,IAAI,CAACC,OAAO,CAACuB,YAAT,CADjB;AAAA,UACLC,OADK,SACLA,OADK;;AAEbpB,IAAAA,OAAO,CAACC,GAAR,CAAYmB,OAAZ,EAAqB,2CAArB;AACA,UAAM1B,IAAI,CAACI,KAAD,EAAQsB,OAAR,CAAV;AACC;AACA;AAED,eAAeF,UAAf","sourcesContent":["\nimport { put, call,take } from 'redux-saga/effects';\nimport * as actions from '../actions';\n import history from '../helper/history';\n\nexport function* LogIn(data) {\nconsole.log(\"submit------form\");\nyield put(actions.LogIn.request(data));\ntry {\nconsole.log(data, '<=============saga data')\nif (!data.name || !data.roomno || !data.dob) {\n    throw new Error({ error: { customMessage: 'fields are mandatory.' } });\n    }\n    const response = yield call('http://localhost:3000/', data);\n    console.log(\"response---------->\",response);\n    if (response.user.length > 0){\n        yield put(actions.initialize({ IS_LOGIN: true }));\n                yield put(actions.LogIn.success(response));\n                yield call(history.push, '/dashboard');\n    }\n    else{\n        var data1={ customMessage:'Access Denied.'}\n        yield put(actions.LogIn.failure(data1));\n    }\n}\ncatch ({ error }) {\nconsole.log(error)\nyield put(actions.LogIn.failure(error));\n}\n}\n\nexport function* watchLogIn() {\nwhile (true) {\nconst { payload } = yield take(actions.GUEST_LOG_IN);\nconsole.log(payload, 'ooooooooooooopppppppppppppppppppppppppppp')\nyield call(LogIn, payload);\n}\n}\n\nexport default watchLogIn"]},"metadata":{},"sourceType":"module"}