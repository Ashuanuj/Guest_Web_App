{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport { routerMiddleware } from 'react-router-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport createLogger from 'redux-logger';\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\nconst sagaMiddleware = createSagaMiddleware();\n\nconst devtools = window.devToolsExtension || (() => noop => noop);\n\nexport default function configureStore(initialState = {}, history) {\n  const middlewares = [sagaMiddleware, routerMiddleware(history)].concat(createLogger());\n  const enhancers = [applyMiddleware(...middlewares)].concat(devtools());\n  const store = createStore(rootReducer, initialState, compose(...enhancers)); // Create hook for async sagas\n\n  store.runSaga = sagaMiddleware.run(rootSaga); // sagaMiddleware.run(formActionSaga);\n  //   if (_DEV_ && module.hot) {\n  //     // Enable Webpack hot module replacement for reducers\n  //     module.hot.accept('./reducers', () => {\n  //       const nextRootReducer = require('./reducers').default;\n  //       store.replaceReducer(nextRootReducer);\n  //     });\n  //   }\n\n  return store;\n}","map":{"version":3,"sources":["/media/mapper/Vani/helius-app/src/helper/store.js"],"names":["createStore","applyMiddleware","compose","routerMiddleware","createSagaMiddleware","createLogger","rootReducer","rootSaga","sagaMiddleware","devtools","window","devToolsExtension","noop","configureStore","initialState","history","middlewares","concat","enhancers","store","runSaga","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAOC,QAAP,MAAqB,SAArB;AAEA,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;;AACA,MAAMK,QAAQ,GAAGC,MAAM,CAACC,iBAAP,KAA6B,MAAMC,IAAI,IAAIA,IAA3C,CAAjB;;AAEA,eAAe,SAASC,cAAT,CAAwBC,YAAY,GAAG,EAAvC,EAA2CC,OAA3C,EAAoD;AACjE,QAAMC,WAAW,GAAG,CAClBR,cADkB,EAElBL,gBAAgB,CAACY,OAAD,CAFE,EAGlBE,MAHkB,CAGXZ,YAAY,EAHD,CAApB;AAKA,QAAMa,SAAS,GAAG,CAChBjB,eAAe,CAAC,GAAGe,WAAJ,CADC,EAEhBC,MAFgB,CAETR,QAAQ,EAFC,CAAlB;AAIA,QAAMU,KAAK,GAAGnB,WAAW,CACvBM,WADuB,EAEvBQ,YAFuB,EAGvBZ,OAAO,CAAC,GAAGgB,SAAJ,CAHgB,CAAzB,CAViE,CAgBjE;;AACAC,EAAAA,KAAK,CAACC,OAAN,GAAgBZ,cAAc,CAACa,GAAf,CAAmBd,QAAnB,CAAhB,CAjBiE,CAkBjE;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,SAAOY,KAAP;AACD","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport { routerMiddleware } from 'react-router-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport createLogger from 'redux-logger';\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst devtools = window.devToolsExtension || (() => noop => noop);\n\nexport default function configureStore(initialState = {}, history) {\n  const middlewares = [\n    sagaMiddleware,\n    routerMiddleware(history),\n  ].concat(createLogger());\n\n  const enhancers = [\n    applyMiddleware(...middlewares),\n  ].concat(devtools());\n\n  const store = createStore(\n    rootReducer,\n    initialState,\n    compose(...enhancers)\n  );\n\n  // Create hook for async sagas\n  store.runSaga = sagaMiddleware.run(rootSaga);\n  // sagaMiddleware.run(formActionSaga);\n\n//   if (_DEV_ && module.hot) {\n//     // Enable Webpack hot module replacement for reducers\n//     module.hot.accept('./reducers', () => {\n//       const nextRootReducer = require('./reducers').default;\n//       store.replaceReducer(nextRootReducer);\n//     });\n//   }\n\n  return store;\n}"]},"metadata":{},"sourceType":"module"}