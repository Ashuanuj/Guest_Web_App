{"ast":null,"code":"import { put, call, fork, take } from 'redux-saga/effects';\nimport * as actions from '../actions';\nimport history from '../helper/history';\nexport function* guestLogIn(data) {\n  yield put(actions.guestLogIn.request());\n  console.log(\"submit------form\");\n\n  try {// if (!data.name || !data.roomno || !data.dob) {\n    // throw new Error({ error: { customMessage: 'fields are mandatory.' } });\n    // }\n    // const response = yield call('http://localhost:3000/', data);\n    // console.log(\"response---------->\",response);\n    // if (response.user.length > 0){\n    //     yield put(actions.initialize({ IS_LOGIN: true }));\n    //             yield put(actions.guestLogIn.success(response));\n    //             yield call(history.push, '/dashboard');\n    // }\n    // else{\n    //     yield put(actions.guestLogIn.failure({ customMessage:'Access Denied.'}));\n    // }\n  } catch (_ref) {\n    let error = _ref.error;\n    yield put(actions.guestLogIn.failure(error));\n  }\n}\nexport function* watchLogIn() {\n  while (true) {\n    const _ref2 = yield take(actions.GUEST_LOG_IN),\n          payload = _ref2.payload;\n\n    yield call(guestLogIn, payload);\n  }\n}\nexport default [fork(watchLogIn)];","map":{"version":3,"sources":["/media/mapper/Vani/helius-app/src/sagas/guestForm.js"],"names":["put","call","fork","take","actions","history","guestLogIn","data","request","console","log","error","failure","watchLogIn","GUEST_LOG_IN","payload"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAAyBC,IAAzB,QAAoC,oBAApC;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAGQ,OAAO,UAAWC,UAAX,CAAsBC,IAAtB,EAA4B;AACnC,QAAMP,GAAG,CAACI,OAAO,CAACE,UAAR,CAAmBE,OAAnB,EAAD,CAAT;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,MAAI,CAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEP,GAhBD,CAiBA,aAAkB;AAAA,QAATC,KAAS,QAATA,KAAS;AAClB,UAAMX,GAAG,CAACI,OAAO,CAACE,UAAR,CAAmBM,OAAnB,CAA2BD,KAA3B,CAAD,CAAT;AACC;AACA;AAED,OAAO,UAAWE,UAAX,GAAwB;AAC3B,SAAO,IAAP,EAAa;AAAA,kBACO,MAAMV,IAAI,CAACC,OAAO,CAACU,YAAT,CADjB;AAAA,UACLC,OADK,SACLA,OADK;;AAEL,UAAMd,IAAI,CAACK,UAAD,EAAaS,OAAb,CAAV;AACP;AACA;AAGb,eAAe,CACXb,IAAI,CAACW,UAAD,CADO,CAAf","sourcesContent":["import { put, call, fork,take} from 'redux-saga/effects';\nimport * as actions from '../actions';\nimport history from '../helper/history';\n\n\n        export function * guestLogIn(data) {\n        yield put(actions.guestLogIn.request());\n        console.log(\"submit------form\");\n        try {\n\n                // if (!data.name || !data.roomno || !data.dob) {\n                // throw new Error({ error: { customMessage: 'fields are mandatory.' } });\n                // }\n                // const response = yield call('http://localhost:3000/', data);\n                // console.log(\"response---------->\",response);\n                // if (response.user.length > 0){\n                //     yield put(actions.initialize({ IS_LOGIN: true }));\n                //             yield put(actions.guestLogIn.success(response));\n                //             yield call(history.push, '/dashboard');\n                // }\n                // else{\n                //     yield put(actions.guestLogIn.failure({ customMessage:'Access Denied.'}));\n                // }\n                    \n        }\n        catch ({ error }) {\n        yield put(actions.guestLogIn.failure(error));\n        }\n        }\n\n        export function * watchLogIn() {\n            while (true) {\n            const { payload } = yield take(actions.GUEST_LOG_IN);\n                    yield call(guestLogIn, payload);\n            }\n            }\n            \n\nexport default [\n    fork(watchLogIn)\n];"]},"metadata":{},"sourceType":"module"}