{"ast":null,"code":"var _jsxFileName = \"/media/mapper/Vani/helius-app/src/components/RequestForm.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Col, Button, Form, FormGroup, Input } from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = 'Required';\n  } else if (values.name.length < 2) {\n    errors.name = 'Minimum be 2 characters or more';\n  }\n\n  if (!values.roomno) {\n    errors.roomno = 'Required';\n  }\n\n  if (!values.dob) {\n    errors.dob = 'Required';\n  }\n\n  return errors;\n};\n\nconst renderField = ({\n  input,\n  label,\n  type,\n  meta: {\n    touched,\n    error,\n    warning\n  }\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(\"label\", {\n  className: \"control-label\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, label), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, React.createElement(\"input\", Object.assign({}, input, {\n  placeholder: label,\n  type: type,\n  className: \"form-control\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n})), touched && (error && React.createElement(\"span\", {\n  className: \"text-danger\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, error) || warning && React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, warning))));\n\nlet RequestForm = props => {\n  const handleSubmit = props.handleSubmit,\n        usernameInputProps = props.usernameInputProps,\n        roomnoInputProps = props.roomnoInputProps,\n        dobInputProps = props.dobInputProps;\n  return React.createElement(Col, {\n    className: \"form-main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Field, Object.assign({}, usernameInputProps, {\n    className: \"input-bgColor\",\n    component: renderField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Field, Object.assign({}, roomnoInputProps, {\n    className: \"input-bgColor\",\n    component: renderField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }))), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Field, Object.assign({}, dobInputProps, {\n    className: \"input-bgColor\",\n    component: renderField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))), React.createElement(Button, {\n    size: \"lg\",\n    className: \"Requestbtn bg-gradient-Requestbtn btn-outline-info border-0\",\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"REQUEST ACCESS\")));\n};\n\nRequestForm.propTypes = {\n  // usernameLabel: PropTypes.string,\n  usernameInputProps: PropTypes.object,\n  roomnoInputProps: PropTypes.object,\n  dobInputProps: PropTypes.object\n};\nRequestForm.defaultProps = {\n  usernameLabel: 'Bansal',\n  usernameInputProps: {\n    type: 'text',\n    placeholder: 'Name'\n  },\n  roomnoLabel: 'Name',\n  roomnoInputProps: {\n    type: 'text',\n    placeholder: 'Room No'\n  },\n  dobLabel: 'Date of Birth',\n  dobInputProps: {\n    type: 'text',\n    placeholder: 'Date of Birth'\n  }\n};\nRequestForm = reduxForm({\n  form: 'request-form',\n  validate\n})(RequestForm);\nexport default RequestForm;","map":{"version":3,"sources":["/media/mapper/Vani/helius-app/src/components/RequestForm.js"],"names":["PropTypes","React","Col","Button","Form","FormGroup","Input","Field","reduxForm","validate","values","errors","name","length","roomno","dob","renderField","input","label","type","meta","touched","error","warning","RequestForm","props","handleSubmit","usernameInputProps","roomnoInputProps","dobInputProps","propTypes","object","defaultProps","usernameLabel","placeholder","roomnoLabel","dobLabel","form"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {Col, Button, Form, FormGroup, Input } from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\n\n\nconst validate = values => {\n  const errors = {}\n  if (!values.name) {\n    errors.name = 'Required'\n  } else if (values.name.length < 2) {\n    errors.name = 'Minimum be 2 characters or more'\n  }\n  if (!values.roomno) {\n    errors.roomno = 'Required'\n  }\n  if (!values.dob) {\n    errors.dob = 'Required'\n  }\n  return errors\n  }\n\n  const renderField = ({ input, label, type, meta: { touched, error, warning } }) => (\n    <div>\n      <label className=\"control-label\">{label}</label>\n      <div>\n        <input {...input} placeholder={label} type={type} className=\"form-control\" />\n        {touched && ((error && <span className=\"text-danger\">{error}</span>) || (warning && <span>{warning}</span>))}\n      </div>\n    </div>\n  )\n\n\nlet RequestForm = props => {\n    const {      \n        // usernameLabel,\n        handleSubmit,\n        usernameInputProps,\n        roomnoInputProps,\n        dobInputProps\n    } = props\n    return(\n            <Col className=\"form-main\">\n              <Form onSubmit={handleSubmit} >\n                    <FormGroup>\n                        {/* <Label for={usernameLabel}>{usernameLabel}</Label> */}\n                        <Field {...usernameInputProps} className=\"input-bgColor\" component={renderField}/>\n                    </FormGroup>\n                    <FormGroup>\n                        \n                        <Field {...roomnoInputProps} className=\"input-bgColor\" component={renderField} />\n                    </FormGroup>\n                    <FormGroup>\n                      \n                        <Field {...dobInputProps} className=\"input-bgColor\" component={renderField}/>\n                    </FormGroup>\n                    \n                  \n                    <Button\n                        size=\"lg\"\n                        className=\"Requestbtn bg-gradient-Requestbtn btn-outline-info border-0\"\n                        block\n                        >\n                            REQUEST ACCESS\n                    </Button>\n                   \n              </Form>\n              </Col>\n      \n    );\n  }\n\nRequestForm.propTypes = {\n    // usernameLabel: PropTypes.string,\n    usernameInputProps: PropTypes.object,\n    roomnoInputProps: PropTypes.object,\n    dobInputProps: PropTypes.object\n}\n\n\nRequestForm.defaultProps = {\n    usernameLabel: 'Bansal',\n    usernameInputProps: {\n      type: 'text',\n      placeholder: 'Name',\n    },\n   roomnoLabel: 'Name',\n   roomnoInputProps: {\n      type: 'text',\n      placeholder: 'Room No',\n    },\n   dobLabel: 'Date of Birth',\n   dobInputProps: {\n      type: 'text',\n      placeholder: 'Date of Birth',\n    },\n};\n\nRequestForm = reduxForm({\n  form: 'request-form',\n  validate,\n})(RequestForm);\n\nexport default RequestForm;"]},"metadata":{},"sourceType":"module"}