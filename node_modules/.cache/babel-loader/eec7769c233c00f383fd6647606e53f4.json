{"ast":null,"code":"import { put, call, fork, take, all } from 'redux-saga/effects';\nimport * as actions from '../actions'; // import history from '../helper/history';\n\nexport function* LogIn(data) {\n  console.log(\"submit------form\");\n  yield put(actions.LogIn.request());\n\n  try {\n    console.log(data, 'WWWWWWWWWWWWWWWWWWWWWWWWW'); // if (!data.name || !data.roomno || !data.dob) {\n    // throw new Error({ error: { customMessage: 'fields are mandatory.' } });\n    // }\n    // const response = yield call('http://localhost:3000/', data);\n    // console.log(\"response---------->\",response);\n    // if (response.user.length > 0){\n    //     yield put(actions.initialize({ IS_LOGIN: true }));\n    //             yield put(actions.LogIn.success(response));\n    //             yield call(history.push, '/dashboard');\n    // }\n    // else{\n    //     yield put(actions.LogIn.failure({ customMessage:'Access Denied.'}));\n    // }\n  } catch (_ref) {\n    let error = _ref.error;\n    console.log(error);\n    yield put(actions.LogIn.failure(error));\n  }\n}\nexport function* watchLogIn() {\n  while (true) {\n    const _ref2 = yield take(actions.GUEST_LOG_IN),\n          payload = _ref2.payload;\n\n    console.log(payload, 'ooooooooooooopppppppppppppppppppppppppppp');\n    yield call(LogIn, payload);\n  }\n} // export default function* root(){\n//     yield all([fork(watchLogIn)])\n// }\n\nexport default watchLogIn;","map":{"version":3,"sources":["/home/active40/Downloads/helius-app/src/sagas/guestForm.js"],"names":["put","call","fork","take","all","actions","LogIn","data","console","log","request","error","failure","watchLogIn","GUEST_LOG_IN","payload"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB,C,CACA;;AAEA,OAAO,UAAUC,KAAV,CAAgBC,IAAhB,EAAsB;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,QAAMT,GAAG,CAACK,OAAO,CAACC,KAAR,CAAcI,OAAd,EAAD,CAAT;;AACA,MAAI;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,2BAAlB,EADA,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,GAhBD,CAiBA,aAAkB;AAAA,QAATI,KAAS,QAATA,KAAS;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACA,UAAMX,GAAG,CAACK,OAAO,CAACC,KAAR,CAAcM,OAAd,CAAsBD,KAAtB,CAAD,CAAT;AACH;AACJ;AAED,OAAO,UAAUE,UAAV,GAAuB;AAC1B,SAAO,IAAP,EAAa;AAAA,kBACW,MAAMV,IAAI,CAACE,OAAO,CAACS,YAAT,CADrB;AAAA,UACDC,OADC,SACDA,OADC;;AAETP,IAAAA,OAAO,CAACC,GAAR,CAAYM,OAAZ,EAAqB,2CAArB;AACA,UAAMd,IAAI,CAACK,KAAD,EAAQS,OAAR,CAAV;AACH;AACJ,C,CAGD;AACA;AAEA;;AAEA,eAAeF,UAAf","sourcesContent":["import { put, call, fork, take, all } from 'redux-saga/effects';\nimport * as actions from '../actions';\n// import history from '../helper/history';\n\nexport function* LogIn(data) {\n    console.log(\"submit------form\");\n    yield put(actions.LogIn.request());\n    try {\n        console.log(data, 'WWWWWWWWWWWWWWWWWWWWWWWWW')\n        // if (!data.name || !data.roomno || !data.dob) {\n        // throw new Error({ error: { customMessage: 'fields are mandatory.' } });\n        // }\n        // const response = yield call('http://localhost:3000/', data);\n        // console.log(\"response---------->\",response);\n        // if (response.user.length > 0){\n        //     yield put(actions.initialize({ IS_LOGIN: true }));\n        //             yield put(actions.LogIn.success(response));\n        //             yield call(history.push, '/dashboard');\n        // }\n        // else{\n        //     yield put(actions.LogIn.failure({ customMessage:'Access Denied.'}));\n        // }\n\n    }\n    catch ({ error }) {\n        console.log(error)\n        yield put(actions.LogIn.failure(error));\n    }\n}\n\nexport function* watchLogIn() {\n    while (true) {\n        const { payload } = yield take(actions.GUEST_LOG_IN);\n        console.log(payload, 'ooooooooooooopppppppppppppppppppppppppppp')\n        yield call(LogIn, payload);\n    }\n}\n\n\n// export default function* root(){\n//     yield all([fork(watchLogIn)])\n    \n// }\n\nexport default watchLogIn"]},"metadata":{},"sourceType":"module"}