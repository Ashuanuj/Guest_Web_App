{"ast":null,"code":"import { put, takeEvery, call } from 'redux-saga/effects';\nimport * as actions from '../actions';\nimport { api } from '../services';\nimport SwipeImage from \"../components/assets/img/icons/wiping-swipe-for-floors.svg\";\nimport BellImage from \"../components/assets/img/icons/bell1.svg\";\nimport ForkImage from \"../components/assets/img/icons/plate-fork-and-knife.svg\";\nimport FileImage from \"../components/assets/img/icons/file.svg\";\nexport function* ServiceData() {\n  console.log(\"submit------services\");\n  yield put(actions.ServiceData.request());\n\n  try {\n    console.log(\"SUCCESS-SAGA_DASHBOARD\");\n    let objArray = [{\n      icon: SwipeImage,\n      link: \"frontoffice\"\n    }, {\n      icon: BellImage,\n      link: \"dashboard\"\n    }, {\n      icon: ForkImage,\n      link: \"services\"\n    }, {\n      icon: FileImage,\n      link: \"dashboard\"\n    }, {\n      icon: FileImage,\n      link: \"dashboard\"\n    }];\n    const response = yield call(api.getGuestServices);\n    console.log(response, 'wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww');\n    let data = response.guestServices && response.guestServices.forEach((item, index) => objArray.forEach((elem, i) => {\n      if (i == index) {\n        item.icon = elem.icon;\n        item.link = elem.link;\n      }\n\n      ;\n    }));\n    console.log(data, 'ooooooooooooooopppppppppppppppp');\n    yield put(actions.ServiceData.success(data));\n  } catch (_ref) {\n    let error = _ref.error;\n    yield put(actions.ServiceData.read.failure(error));\n  }\n}\nexport function* watchServiceData() {\n  yield takeEvery(actions.LOAD_SERVICE, ServiceData);\n}\nexport default watchServiceData;","map":{"version":3,"sources":["/home/ashu/Downloads/helius-app-actions/helius-app-actions/helius-app/src/sagas/dashboardSagas.js"],"names":["put","takeEvery","call","actions","api","ServiceData","console","log","request","objArray","icon","SwipeImage","link","BellImage","ForkImage","FileImage","response","getGuestServices","data","guestServices","forEach","item","index","elem","i","success","error","read","failure","watchServiceData","LOAD_SERVICE"],"mappings":"AACA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACA,SAASC,GAAT,QAAoB,aAApB;;;;;AAMA,OAAO,UAAUC,WAAV,GAAwB;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,QAAMP,GAAG,CAACG,OAAO,CAACE,WAAR,CAAoBG,OAApB,EAAD,CAAT;;AACA,MAAI;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,QAAIE,QAAQ,GAAG,CACX;AAAEC,MAAAA,IAAI,EAAEC,UAAR;AAAoBC,MAAAA,IAAI;AAAxB,KADW,EAEX;AAAEF,MAAAA,IAAI,EAAEG,SAAR;AAAmBD,MAAAA,IAAI;AAAvB,KAFW,EAGX;AAAEF,MAAAA,IAAI,EAAEI,SAAR;AAAmBF,MAAAA,IAAI;AAAvB,KAHW,EAIX;AAAEF,MAAAA,IAAI,EAAEK,SAAR;AAAmBH,MAAAA,IAAI;AAAvB,KAJW,EAKX;AAAEF,MAAAA,IAAI,EAAEK,SAAR;AAAmBH,MAAAA,IAAI;AAAvB,KALW,CAAf;AAOA,UAAMI,QAAQ,GAAG,MAAMd,IAAI,CAACE,GAAG,CAACa,gBAAL,CAA3B;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ,EAAsB,qCAAtB;AACA,QAAIE,IAAI,GAAGF,QAAQ,CAACG,aAAT,IAA0BH,QAAQ,CAACG,aAAT,CAAuBC,OAAvB,CAA+B,CAACC,IAAD,EAAOC,KAAP,KAChEb,QAAQ,CAACW,OAAT,CAAiB,CAACG,IAAD,EAAOC,CAAP,KAAa;AAC1B,UAAIA,CAAC,IAAIF,KAAT,EAAgB;AACZD,QAAAA,IAAI,CAACX,IAAL,GAAYa,IAAI,CAACb,IAAjB;AACAW,QAAAA,IAAI,CAACT,IAAL,GAAYW,IAAI,CAACX,IAAjB;AACH;;AAAA;AACJ,KALD,CADiC,CAArC;AAQAN,IAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ,EAAkB,iCAAlB;AACA,UAAMlB,GAAG,CAACG,OAAO,CAACE,WAAR,CAAoBoB,OAApB,CAA4BP,IAA5B,CAAD,CAAT;AACH,GArBD,CAqBE,aAAkB;AAAA,QAATQ,KAAS,QAATA,KAAS;AAChB,UAAM1B,GAAG,CAACG,OAAO,CAACE,WAAR,CAAoBsB,IAApB,CAAyBC,OAAzB,CAAiCF,KAAjC,CAAD,CAAT;AACH;AACJ;AAED,OAAO,UAAUG,gBAAV,GAA6B;AAChC,QAAM5B,SAAS,CAACE,OAAO,CAAC2B,YAAT,EAAuBzB,WAAvB,CAAf;AACH;AAED,eAAewB,gBAAf","sourcesContent":["\nimport { put, takeEvery, call } from 'redux-saga/effects';\nimport * as actions from '../actions';\nimport { api } from '../services';\nimport SwipeImage from '../components/assets/img/icons/wiping-swipe-for-floors.svg';\nimport BellImage from '../components/assets/img/icons/bell1.svg';\nimport ForkImage from '../components/assets/img/icons/plate-fork-and-knife.svg';\nimport FileImage from '../components/assets/img/icons/file.svg';\n\nexport function* ServiceData() {\n    console.log(\"submit------services\");\n    yield put(actions.ServiceData.request());\n    try {\n        console.log(\"SUCCESS-SAGA_DASHBOARD\")\n        let objArray = [\n            { icon: SwipeImage, link: `frontoffice` },\n            { icon: BellImage, link: `dashboard` },\n            { icon: ForkImage, link: `services` },\n            { icon: FileImage, link: `dashboard` },\n            { icon: FileImage, link: `dashboard` }\n        ]\n        const response = yield call(api.getGuestServices)\n        console.log(response, 'wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww')\n        let data = response.guestServices && response.guestServices.forEach((item, index) =>\n            objArray.forEach((elem, i) => {\n                if (i == index) {\n                    item.icon = elem.icon\n                    item.link = elem.link\n                };\n            })\n        )\n        console.log(data, 'ooooooooooooooopppppppppppppppp')\n        yield put(actions.ServiceData.success(data));\n    } catch ({ error }) {\n        yield put(actions.ServiceData.read.failure(error));\n    }\n}\n\nexport function* watchServiceData() {\n    yield takeEvery(actions.LOAD_SERVICE, ServiceData);\n}\n\nexport default watchServiceData"]},"metadata":{},"sourceType":"module"}