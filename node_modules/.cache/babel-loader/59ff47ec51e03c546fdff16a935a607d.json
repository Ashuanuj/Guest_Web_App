{"ast":null,"code":"var _jsxFileName = \"/media/mapper/Vani/helius-app/src/components/RequestForm.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Col, Button, Form } from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport { TextInput } from '../components/forms/TextInput';\nimport { validate } from '../components/forms/validate'; // const validate = values => {\n//   const errors = {}\n//   if (!values.name) {\n//     errors.name = 'Required'\n//   } else if (values.name.length < 3) {\n//     errors.name = 'Minimum be 3 characters or more'\n//   }\n//   if (!values.roomno) {\n//     errors.roomno = 'Required'\n//   }\n//   if (!values.dob) {\n//     errors.dob = 'Required'\n//   }\n//   return errors\n//   }\n// const renderField = ({ input,label, type, meta: { touched, error, warning } }) => (\n//   <FormGroup>\n//       <Input {...input} placeholder={label} type={type}/>\n//       {touched && ((error && <span className=\"text-danger\">{error}</span>) || (warning && <span>{warning}</span>))}\n//   </FormGroup>\n// )\n\nlet RequestForm = props => {\n  const handleSubmit = props.handleSubmit,\n        pristine = props.pristine,\n        submitting = props.submitting,\n        usernameInputProps = props.usernameInputProps,\n        roomnoInputProps = props.roomnoInputProps,\n        dobInputProps = props.dobInputProps;\n  return React.createElement(Col, {\n    className: \"form-main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Field, Object.assign({}, usernameInputProps, {\n    className: \"input-bgColor\",\n    component: renderField,\n    name: \"name\",\n    label: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(Field, Object.assign({}, roomnoInputProps, {\n    className: \"input-bgColor\",\n    component: renderField,\n    name: \"roomno\",\n    label: \"Room No\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(Field, Object.assign({}, dobInputProps, {\n    type: \"date\",\n    className: \"input-bgColor\",\n    component: renderField,\n    name: \"dob\",\n    label: \"Date of Birth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(Button, {\n    size: \"lg\",\n    type: \"submit\",\n    disabled: pristine || submitting,\n    className: \"Requestbtn bg-gradient-Requestbtn btn-outline-info border-0\",\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"REQUEST ACCESS\")));\n};\n\nRequestForm.propTypes = {\n  // usernameLabel: PropTypes.string,\n  usernameInputProps: PropTypes.object,\n  roomnoInputProps: PropTypes.object,\n  dobInputProps: PropTypes.object\n};\nRequestForm.defaultProps = {\n  usernameLabel: 'Bansal',\n  usernameInputProps: {\n    type: 'text',\n    placeholder: 'Name'\n  },\n  roomnoLabel: 'Name',\n  roomnoInputProps: {\n    type: 'text',\n    placeholder: 'Room No'\n  },\n  dobLabel: 'Date of Birth',\n  dobInputProps: {\n    type: 'text',\n    placeholder: 'Date of Birth'\n  }\n};\nRequestForm = reduxForm({\n  form: 'request-form',\n  validate\n})(RequestForm);\nexport default RequestForm;","map":{"version":3,"sources":["/media/mapper/Vani/helius-app/src/components/RequestForm.js"],"names":["PropTypes","React","Col","Button","Form","Field","reduxForm","TextInput","validate","RequestForm","props","handleSubmit","pristine","submitting","usernameInputProps","roomnoInputProps","dobInputProps","renderField","propTypes","object","defaultProps","usernameLabel","type","placeholder","roomnoLabel","dobLabel","form"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {Col, Button, Form} from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport { TextInput } from '../components/forms/TextInput';\nimport {validate} from '../components/forms/validate';\n\n// const validate = values => {\n//   const errors = {}\n//   if (!values.name) {\n//     errors.name = 'Required'\n//   } else if (values.name.length < 3) {\n//     errors.name = 'Minimum be 3 characters or more'\n//   }\n//   if (!values.roomno) {\n//     errors.roomno = 'Required'\n//   }\n//   if (!values.dob) {\n//     errors.dob = 'Required'\n//   }\n//   return errors\n//   }\n\n  // const renderField = ({ input,label, type, meta: { touched, error, warning } }) => (\n  //   <FormGroup>\n  //       <Input {...input} placeholder={label} type={type}/>\n  //       {touched && ((error && <span className=\"text-danger\">{error}</span>) || (warning && <span>{warning}</span>))}\n  //   </FormGroup>\n  // )\n\n\nlet RequestForm = props => {\n    const {      \n        // usernameLabel,\n        handleSubmit, pristine, submitting,\n        usernameInputProps,\n        roomnoInputProps,\n        dobInputProps\n    } = props\n    return(\n            <Col className=\"form-main\">\n              <Form onSubmit={handleSubmit} >\n                   \n                    <Field {...usernameInputProps} className=\"input-bgColor\" \n                    component={renderField} name=\"name\" label=\"Name\"/>\n                \n                    <Field {...roomnoInputProps} className=\"input-bgColor\" \n                    component={renderField} name=\"roomno\" label=\"Room No\"/>\n              \n                    <Field {...dobInputProps} type=\"date\" className=\"input-bgColor\" \n                    component={renderField} name=\"dob\" label=\"Date of Birth\"/>\n                \n                    <Button\n                        size=\"lg\"\n                        type=\"submit\"\n                        disabled={pristine || submitting} \n                        className=\"Requestbtn bg-gradient-Requestbtn btn-outline-info border-0\"\n                        block \n                        >\n                            REQUEST ACCESS\n                    </Button>\n                   \n              </Form>\n            </Col>\n      \n    );\n  }\n\nRequestForm.propTypes = {\n    // usernameLabel: PropTypes.string,\n    usernameInputProps: PropTypes.object,\n    roomnoInputProps: PropTypes.object,\n    dobInputProps: PropTypes.object\n}\n\nRequestForm.defaultProps = {\n    usernameLabel: 'Bansal',\n    usernameInputProps: {\n      type: 'text',\n      placeholder: 'Name',\n    },\n   roomnoLabel: 'Name',\n   roomnoInputProps: {\n      type: 'text',\n      placeholder: 'Room No',\n    },\n   dobLabel: 'Date of Birth',\n   dobInputProps: {\n      type: 'text',\n      placeholder: 'Date of Birth',\n    },\n};\n\nRequestForm = reduxForm({\n  form: 'request-form',\n  validate,\n})(RequestForm);\n\nexport default RequestForm;"]},"metadata":{},"sourceType":"module"}