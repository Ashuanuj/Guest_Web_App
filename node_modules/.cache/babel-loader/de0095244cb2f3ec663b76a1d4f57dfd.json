{"ast":null,"code":"import { put, call, take } from 'redux-saga/effects';\nimport { camelizeKeys, decamelizeKeys } from 'humps';\nimport fetch from 'isomorphic-fetch';\nimport { api } from '../services';\nimport qs from 'qs';\nimport * as actions from '../actions';\nimport history from '../helper/history';\nexport function* LogIn(data) {\n  console.log(\"submit------form\");\n  yield put(actions.LogIn.request(data));\n\n  try {\n    // const response = yield call('http://localhost:3000/', data);\n    // console.log(\"response---------->\",response);\n    // const url = '206.189.143.249:70/authentication/login'\n    const response = yield call(fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: 'admin',\n        password: 'active.123'\n      })\n    }));\n    console.log(response);\n\n    if (data.name === 'test' && data.roomno === '101' && data.dob === '2019-10-04') {\n      yield call(history.push, '/dashboard');\n    } else {\n      var data1 = {\n        customMessage: 'Access Denied.'\n      };\n      yield put(actions.LogIn.failure(data1));\n    }\n  } catch (_ref) {\n    let error = _ref.error;\n    console.log(error);\n    yield put(actions.LogIn.failure(error));\n  }\n}\nexport function* watchLogIn() {\n  while (true) {\n    const _ref2 = yield take(actions.GUEST_LOG_IN),\n          payload = _ref2.payload;\n\n    console.log(payload, 'ooooooooooooopppppppppppppppppppppppppppp');\n    yield call(LogIn, payload);\n  }\n}\nexport default watchLogIn;","map":{"version":3,"sources":["/home/ashu/Downloads/helius-app-actions/helius-app/src/sagas/guestForm.js"],"names":["put","call","take","camelizeKeys","decamelizeKeys","fetch","api","qs","actions","history","LogIn","data","console","log","request","response","url","method","body","JSON","stringify","email","password","name","roomno","dob","push","data1","customMessage","failure","error","watchLogIn","GUEST_LOG_IN","payload"],"mappings":"AACA,SAASA,GAAT,EAAcC,IAAd,EAAmBC,IAAnB,QAA+B,oBAA/B;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACC,OAAOC,OAAP,MAAoB,mBAApB;AAED,OAAO,UAAUC,KAAV,CAAgBC,IAAhB,EAAsB;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,QAAMb,GAAG,CAACQ,OAAO,CAACE,KAAR,CAAcI,OAAd,CAAsBH,IAAtB,CAAD,CAAT;;AACA,MAAI;AACA;AACA;AACA;AACA,UAAMI,QAAQ,GAAG,MAAMd,IAAI,CAACI,KAAK,CAACW,GAAD,EAAK;AAClCC,MAAAA,MAAM,EAAE,MAD0B;AAElCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,KAAK,EAAE,OADU;AAEjBC,QAAAA,QAAQ,EAAE;AAFO,OAAf;AAF4B,KAAL,CAAN,CAA3B;AAOAV,IAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;;AACA,QAAIJ,IAAI,CAACY,IAAL,KAAc,MAAd,IAAwBZ,IAAI,CAACa,MAAL,KAAgB,KAAxC,IAAiDb,IAAI,CAACc,GAAL,KAAa,YAAlE,EAA+E;AAC3E,YAAMxB,IAAI,CAACQ,OAAO,CAACiB,IAAT,EAAe,YAAf,CAAV;AACH,KAFD,MAGI;AACA,UAAIC,KAAK,GAAC;AAAEC,QAAAA,aAAa,EAAC;AAAhB,OAAV;AACA,YAAM5B,GAAG,CAACQ,OAAO,CAACE,KAAR,CAAcmB,OAAd,CAAsBF,KAAtB,CAAD,CAAT;AACH;AACJ,GAnBD,CAoBA,aAAkB;AAAA,QAATG,KAAS,QAATA,KAAS;AAClBlB,IAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAZ;AACA,UAAM9B,GAAG,CAACQ,OAAO,CAACE,KAAR,CAAcmB,OAAd,CAAsBC,KAAtB,CAAD,CAAT;AACC;AACA;AAED,OAAO,UAAUC,UAAV,GAAuB;AAC9B,SAAO,IAAP,EAAa;AAAA,kBACO,MAAM7B,IAAI,CAACM,OAAO,CAACwB,YAAT,CADjB;AAAA,UACLC,OADK,SACLA,OADK;;AAEbrB,IAAAA,OAAO,CAACC,GAAR,CAAYoB,OAAZ,EAAqB,2CAArB;AACA,UAAMhC,IAAI,CAACS,KAAD,EAAQuB,OAAR,CAAV;AACC;AACA;AAED,eAAeF,UAAf","sourcesContent":["\nimport { put, call,take } from 'redux-saga/effects';\nimport { camelizeKeys, decamelizeKeys } from 'humps';\nimport fetch from 'isomorphic-fetch';\nimport { api } from '../services';\nimport qs from 'qs';\nimport * as actions from '../actions';\n import history from '../helper/history';\n\nexport function* LogIn(data) {\nconsole.log(\"submit------form\");\nyield put(actions.LogIn.request(data));\ntry {\n    // const response = yield call('http://localhost:3000/', data);\n    // console.log(\"response---------->\",response);\n    // const url = '206.189.143.249:70/authentication/login'\n    const response = yield call(fetch(url,{\n        method: 'POST',\n        body: JSON.stringify({\n            email: 'admin',\n            password: 'active.123' \n        }) \n    }))\n    console.log(response)\n    if (data.name === 'test' && data.roomno === '101' && data.dob === '2019-10-04'){\n        yield call(history.push, '/dashboard');\n    }\n    else{\n        var data1={ customMessage:'Access Denied.'}\n        yield put(actions.LogIn.failure(data1));\n    }\n}\ncatch ({ error }) {\nconsole.log(error)\nyield put(actions.LogIn.failure(error));\n}\n}\n\nexport function* watchLogIn() {\nwhile (true) {\nconst { payload } = yield take(actions.GUEST_LOG_IN);\nconsole.log(payload, 'ooooooooooooopppppppppppppppppppppppppppp')\nyield call(LogIn, payload);\n}\n}\n\nexport default watchLogIn"]},"metadata":{},"sourceType":"module"}