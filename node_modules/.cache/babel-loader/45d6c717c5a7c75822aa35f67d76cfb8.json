{"ast":null,"code":"var _jsxFileName = \"/media/mapper/Vani/helius-app/src/components/RequestForm.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Col, Button, Form } from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport TextInput from '../components/forms/TextInput';\nimport DatePickerInput from './forms/DatePickerInput';\nimport moment from 'moment';\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = 'Please enter Name';\n  } else if (!values.name.match(/^[a-zA-Z]*$/)) {\n    errors.name = 'Please enter alphabet characters only.';\n  } else if (values.name.length < 3) {\n    errors.name = 'Minimum be 3 characters or more';\n  }\n\n  if (!values.roomno) {\n    errors.roomno = 'Please enter your Room No';\n  }\n\n  if (!values.dob) {\n    errors.dob = 'Please select your date of birth';\n  }\n\n  return errors;\n};\n\nlet RequestForm = props => {\n  const handleSubmit = props.handleSubmit,\n        pristine = props.pristine,\n        submitting = props.submitting;\n  return React.createElement(Col, {\n    className: \"form-main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: handleSubmit,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Field, {\n    component: TextInput,\n    name: \"name\",\n    label: \"Name\",\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: TextInput,\n    name: \"roomno\",\n    label: \"Room No\",\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"dob\",\n    placeholderText: \"Date of Birth\",\n    inputValueFormat: \"MM/DD/YYYY\",\n    fixedHeight: true,\n    normalize: value => value ? moment(value).format('MM/DD/YYYY') : null,\n    component: DatePickerInput,\n    onChange: props.onChange,\n    type: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Button, {\n    size: \"lg\",\n    disabled: pristine || submitting,\n    className: \"Requestbtn bg-gradient-Requestbtn btn-outline-info border-0\",\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"REQUEST ACCESS\")));\n};\n\nRequestForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n};\nexport default reduxForm({\n  form: 'guestForm',\n  validate\n})(RequestForm);","map":{"version":3,"sources":["/media/mapper/Vani/helius-app/src/components/RequestForm.js"],"names":["React","PropTypes","Col","Button","Form","Field","reduxForm","TextInput","DatePickerInput","moment","validate","values","errors","name","match","length","roomno","dob","RequestForm","props","handleSubmit","pristine","submitting","onChange","value","format","propTypes","func","isRequired","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Col, Button, Form } from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport TextInput from '../components/forms/TextInput';\nimport DatePickerInput from './forms/DatePickerInput';\nimport moment from 'moment';\n\nconst validate = values => {\n  const errors = {}\n  if (!values.name) {\n    errors.name = 'Please enter Name'\n  } else if (!values.name.match(/^[a-zA-Z]*$/)) {\n    errors.name = 'Please enter alphabet characters only.'\n  } else if (values.name.length < 3) {\n    errors.name = 'Minimum be 3 characters or more'\n  }\n  if (!values.roomno) {\n    errors.roomno = 'Please enter your Room No'\n  }\n  if (!values.dob) {\n    errors.dob = 'Please select your date of birth'\n  }\n  return errors\n}\n\nlet RequestForm = props => {\n  const { handleSubmit, pristine, submitting } = props\n  return (\n    <Col className=\"form-main\">\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n\n        <Field component={TextInput} name=\"name\" label=\"Name\" onChange={props.onChange} />\n\n        <Field component={TextInput} name=\"roomno\" label=\"Room No\" onChange={props.onChange} />\n\n        <Field\n          name=\"dob\"\n          placeholderText=\"Date of Birth\"\n          inputValueFormat=\"MM/DD/YYYY\"\n          fixedHeight\n          normalize={value => (value ? moment(value).format('MM/DD/YYYY') : null)}\n          component={DatePickerInput}\n          onChange={props.onChange}\n          type=\"date\"\n        />\n\n       \n        <Button\n          size=\"lg\"\n          disabled={pristine || submitting}\n          className=\"Requestbtn bg-gradient-Requestbtn btn-outline-info border-0\"\n          block\n        >\n          REQUEST ACCESS\n        </Button>\n        \n      </Form>\n    </Col>\n\n  );\n}\n\nRequestForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default reduxForm({\n  form: 'guestForm',\n  validate,\n})(RequestForm);"]},"metadata":{},"sourceType":"module"}