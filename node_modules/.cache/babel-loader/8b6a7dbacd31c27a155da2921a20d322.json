{"ast":null,"code":"const REQUEST = 'REQUEST';\nconst SUCCESS = 'SUCCESS';\nconst FAILURE = 'FAILURE';\nconst CREATE = 'CREATE';\nconst READ = 'READ';\nconst UPDATE = 'UPDATE';\nconst DELETE = 'DELETE'; // helpers\n\nexport function action(type, payload) {\n  return typeof payload === 'undefined' ? {\n    type\n  } : {\n    type,\n    payload\n  };\n}\nexport function createAction(type) {\n  return payload => action(type, payload);\n}\n/* eslint no-unused-vars: \"off\"*/\n\nexport function createRequestTypes(base) {\n  const res = {};\n  [REQUEST, SUCCESS, FAILURE].forEach(type => {\n    res[type] = \"\".concat(base, \"_\").concat(type);\n  });\n  return res;\n}\nexport function createActionsFromTypes(actionTypes) {\n  const res = {};\n  Reflect.ownKeys(actionTypes).forEach(type => {\n    res[type.toLowerCase()] = createAction(actionTypes[type]);\n  });\n  return res;\n} // generators CRUD action types\n\nexport function createCrudTypes(base) {\n  const res = {};\n  [CREATE, READ, UPDATE, DELETE].forEach(type => {\n    res[type] = createRequestTypes(\"\".concat(base, \"_\").concat(type));\n  });\n  return res;\n} // generates CRUD action creators:\n\nexport function createCrudActions(actionTypes) {\n  const res = {};\n  Reflect.ownKeys(actionTypes).forEach(type => {\n    res[type.toLowerCase()] = {};\n    Reflect.ownKeys(actionTypes[type]).forEach(item => {\n      res[type.toLowerCase()][item.toLowerCase()] = createAction(actionTypes[type][item]);\n    });\n  });\n  return res;\n}","map":{"version":3,"sources":["/media/mapper/Vani/helius-app/src/actions/actionHelper.js"],"names":["REQUEST","SUCCESS","FAILURE","CREATE","READ","UPDATE","DELETE","action","type","payload","createAction","createRequestTypes","base","res","forEach","createActionsFromTypes","actionTypes","Reflect","ownKeys","toLowerCase","createCrudTypes","createCrudActions","item"],"mappings":"AAAA,MAAMA,OAAO,GAAG,SAAhB;AACA,MAAMC,OAAO,GAAG,SAAhB;AACA,MAAMC,OAAO,GAAG,SAAhB;AAEA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,IAAI,GAAG,MAAb;AACA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,MAAM,GAAG,QAAf,C,CAGA;;AACA,OAAO,SAASC,MAAT,CAAgBC,IAAhB,EAAsBC,OAAtB,EAA+B;AACpC,SAAO,OAAOA,OAAP,KAAmB,WAAnB,GAAiC;AAAED,IAAAA;AAAF,GAAjC,GAA4C;AAAEA,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAnD;AACD;AAED,OAAO,SAASC,YAAT,CAAsBF,IAAtB,EAA4B;AACjC,SAAOC,OAAO,IAAIF,MAAM,CAACC,IAAD,EAAOC,OAAP,CAAxB;AACD;AAED;;AACA,OAAO,SAASE,kBAAT,CAA4BC,IAA5B,EAAkC;AACvC,QAAMC,GAAG,GAAG,EAAZ;AACA,GAACb,OAAD,EAAUC,OAAV,EAAmBC,OAAnB,EAA4BY,OAA5B,CAAoCN,IAAI,IAAI;AAC1CK,IAAAA,GAAG,CAACL,IAAD,CAAH,aAAeI,IAAf,cAAuBJ,IAAvB;AACD,GAFD;AAGA,SAAOK,GAAP;AACD;AAED,OAAO,SAASE,sBAAT,CAAgCC,WAAhC,EAA6C;AAClD,QAAMH,GAAG,GAAG,EAAZ;AACAI,EAAAA,OAAO,CAACC,OAAR,CAAgBF,WAAhB,EAA6BF,OAA7B,CAAqCN,IAAI,IAAI;AAC3CK,IAAAA,GAAG,CAACL,IAAI,CAACW,WAAL,EAAD,CAAH,GAA0BT,YAAY,CAACM,WAAW,CAACR,IAAD,CAAZ,CAAtC;AACD,GAFD;AAGA,SAAOK,GAAP;AACD,C,CAED;;AACA,OAAO,SAASO,eAAT,CAAyBR,IAAzB,EAA+B;AACpC,QAAMC,GAAG,GAAG,EAAZ;AACA,GAACV,MAAD,EAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,EAA+BQ,OAA/B,CAAuCN,IAAI,IAAI;AAC7CK,IAAAA,GAAG,CAACL,IAAD,CAAH,GAAYG,kBAAkB,WAAIC,IAAJ,cAAYJ,IAAZ,EAA9B;AACD,GAFD;AAGA,SAAOK,GAAP;AACD,C,CAED;;AACA,OAAO,SAASQ,iBAAT,CAA2BL,WAA3B,EAAwC;AAC7C,QAAMH,GAAG,GAAG,EAAZ;AACAI,EAAAA,OAAO,CAACC,OAAR,CAAgBF,WAAhB,EAA6BF,OAA7B,CAAqCN,IAAI,IAAI;AAC3CK,IAAAA,GAAG,CAACL,IAAI,CAACW,WAAL,EAAD,CAAH,GAA0B,EAA1B;AACAF,IAAAA,OAAO,CAACC,OAAR,CAAgBF,WAAW,CAACR,IAAD,CAA3B,EAAmCM,OAAnC,CAA2CQ,IAAI,IAAI;AACjDT,MAAAA,GAAG,CAACL,IAAI,CAACW,WAAL,EAAD,CAAH,CAAwBG,IAAI,CAACH,WAAL,EAAxB,IAA8CT,YAAY,CAACM,WAAW,CAACR,IAAD,CAAX,CAAkBc,IAAlB,CAAD,CAA1D;AACD,KAFD;AAGD,GALD;AAMA,SAAOT,GAAP;AACD","sourcesContent":["const REQUEST = 'REQUEST';\nconst SUCCESS = 'SUCCESS';\nconst FAILURE = 'FAILURE';\n\nconst CREATE = 'CREATE';\nconst READ = 'READ';\nconst UPDATE = 'UPDATE';\nconst DELETE = 'DELETE';\n\n\n// helpers\nexport function action(type, payload) {\n  return typeof payload === 'undefined' ? { type } : { type, payload };\n}\n\nexport function createAction(type) {\n  return payload => action(type, payload);\n}\n\n/* eslint no-unused-vars: \"off\"*/\nexport function createRequestTypes(base) {\n  const res = {};\n  [REQUEST, SUCCESS, FAILURE].forEach(type => {\n    res[type] = `${base}_${type}`;\n  });\n  return res;\n}\n\nexport function createActionsFromTypes(actionTypes) {\n  const res = {};\n  Reflect.ownKeys(actionTypes).forEach(type => {\n    res[type.toLowerCase()] = createAction(actionTypes[type]);\n  });\n  return res;\n}\n\n// generators CRUD action types\nexport function createCrudTypes(base) {\n  const res = {};\n  [CREATE, READ, UPDATE, DELETE].forEach(type => {\n    res[type] = createRequestTypes(`${base}_${type}`);\n  });\n  return res;\n}\n\n// generates CRUD action creators:\nexport function createCrudActions(actionTypes) {\n  const res = {};\n  Reflect.ownKeys(actionTypes).forEach(type => {\n    res[type.toLowerCase()] = {};\n    Reflect.ownKeys(actionTypes[type]).forEach(item => {\n      res[type.toLowerCase()][item.toLowerCase()] = createAction(actionTypes[type][item]);\n    });\n  });\n  return res;\n}\n"]},"metadata":{},"sourceType":"module"}