{"ast":null,"code":"var _jsxFileName = \"/media/mapper/Vani/helius-app/src/components/RequestForm.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Col, Button, Form } from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport TextInput from '../components/forms/TextInput'; // import {Link} from 'react-router-dom';\n\nimport DatePickerInput from './forms/DatePickerInput';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { submitForm } from '../actions';\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = 'Please enter Name';\n  } else if (!values.name.match(/^[a-zA-Z]*$/)) {\n    errors.name = 'Please enter alphabet characters only.';\n  } else if (values.name.length < 3) {\n    errors.name = 'Minimum be 3 characters or more';\n  }\n\n  if (!values.roomno) {\n    errors.roomno = 'Please enter your Room No';\n  }\n\n  if (!values.dob) {\n    errors.dob = 'Please select your date of birth';\n  }\n\n  return errors;\n};\n\nlet RequestForm = props => {\n  const handleSubmit = props.handleSubmit,\n        pristine = props.pristine,\n        submitting = props.submitting;\n  return React.createElement(Col, {\n    className: \"form-main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Field, {\n    component: TextInput,\n    name: \"name\",\n    label: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: TextInput,\n    name: \"roomno\",\n    label: \"Room No\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"dob\",\n    placeholderText: \"Date of Birth\",\n    inputValueFormat: \"YYYY-MM-DD\",\n    fixedHeight: true,\n    normalize: value => value ? moment(value).format('YYYY-MM-DD') : null,\n    component: DatePickerInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Button, {\n    size: \"lg\",\n    type: \"submit\",\n    disabled: pristine || submitting,\n    className: \"Requestbtn bg-gradient-Requestbtn btn-outline-info border-0\",\n    block: true,\n    onClick: \"{this.props.submitForm}\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"REQUEST ACCESS\")));\n};\n\nRequestForm.propTypes = {\n  usernameInputProps: PropTypes.object,\n  roomnoInputProps: PropTypes.object,\n  dobInputProps: PropTypes.object\n};\nconst mapDispatchToProps = {\n  submitForm: submitForm\n};\nRequestForm = reduxForm({\n  form: 'request-form',\n  validate\n})(RequestForm);\nexport default connect(mapDispatchToProps);","map":{"version":3,"sources":["/media/mapper/Vani/helius-app/src/components/RequestForm.js"],"names":["PropTypes","React","Col","Button","Form","Field","reduxForm","TextInput","DatePickerInput","moment","connect","submitForm","validate","values","errors","name","match","length","roomno","dob","RequestForm","props","handleSubmit","pristine","submitting","value","format","propTypes","usernameInputProps","object","roomnoInputProps","dobInputProps","mapDispatchToProps","form"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {Col, Button, Form} from 'reactstrap';\nimport { Field, reduxForm } from 'redux-form';\nimport TextInput  from '../components/forms/TextInput';\n// import {Link} from 'react-router-dom';\nimport DatePickerInput from './forms/DatePickerInput';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport {submitForm} from '../actions'\n\n\nconst validate = values => {\n  const errors = {}\n  if (!values.name) {\n    errors.name = 'Please enter Name'\n    } else if (!values.name.match(/^[a-zA-Z]*$/)) {\n      errors.name = 'Please enter alphabet characters only.'\n    } else if (values.name.length < 3) {\n      errors.name = 'Minimum be 3 characters or more'\n    }\n  if (!values.roomno) {\n    errors.roomno = 'Please enter your Room No'\n  }\n  if (!values.dob){\n    errors.dob = 'Please select your date of birth'\n  }\n  return errors\n  }\n\nlet RequestForm = props => {\n    const { handleSubmit, pristine, submitting } = props\n    return(\n            <Col className=\"form-main\">\n              <Form onSubmit={handleSubmit} >\n                   \n                    <Field component={TextInput} name=\"name\" label=\"Name\" />\n                \n                    <Field component={TextInput} name=\"roomno\" label=\"Room No\" />\n              \n                    {/* <Field component={TextInput} name=\"dob\" label=\"Date of Birth\" /> */}\n                    <Field\n                    name=\"dob\"\n                    placeholderText=\"Date of Birth\"\n                    inputValueFormat=\"YYYY-MM-DD\"\n                    fixedHeight\n                    normalize={value => (value ? moment(value).format('YYYY-MM-DD') : null)}\n                    component={DatePickerInput}\n                    />\n                  \n                  {/* <Link to=\"/dashboard\"> */}\n                    <Button\n                        size=\"lg\"\n                        type=\"submit\"\n                        disabled={pristine || submitting} \n                        className=\"Requestbtn bg-gradient-Requestbtn btn-outline-info border-0\"\n                        block \n                        onClick=\"{this.props.submitForm}\"\n                        >\n                            REQUEST ACCESS\n                    </Button>\n                   {/* </Link> */}\n              </Form>\n            </Col>\n      \n    );\n  }\n\nRequestForm.propTypes = {\n    usernameInputProps: PropTypes.object,\n    roomnoInputProps: PropTypes.object,\n    dobInputProps: PropTypes.object\n}\n\nconst mapDispatchToProps = {\n  submitForm: submitForm,\n};\n\nRequestForm = reduxForm({\n  form: 'request-form',\n  validate,\n})(RequestForm);\n\nexport default connect(mapDispatchToProps);"]},"metadata":{},"sourceType":"module"}